{"version":3,"sources":["utils/string/masks.js","pages/RecoveryPassword/index.jsx","pages/RecoveryPassword/styles.js","services/api/index.js","styles/themes/light/index.js","pages/Home/styles.js","assets/jss/material-kit-react.js","assets/jss/material-kit-react/components/buttonStyle.js","components/CustomButtons/Button.js","store/ducks/Message/service.js","store/ducks/Message/index.js","components/ButtonTimer/index.js","store/ducks/Validation/service.js","store/ducks/Validation/index.js","assets/images/logo_vileve_way.png","pages/Signin/styles.js","pages/Signin/index.jsx","assets/images/backgroundpresentation.png","pages/Email/styles.js","store/ducks/Email/service.js","store/ducks/Email/index.js","pages/Email/index.jsx","components/CustomTabs/index.js","pages/Signup/TabPanel.jsx","assets/images/register.png","assets/images/White-Abstract.jpg","pages/Signup/styles.js","pages/Signup/slides/SlideOne/index.jsx","assets/images/bg_card_assistencia.jpg","assets/images/bg_card_vilevepay.jpg","pages/Signup/slides/SlideTwo/index.jsx","services/api/api.js","pages/Signup/slides/SlideThree/index.jsx","pages/Signup/slides/SlideFour/index.jsx","pages/Signup/slides/SlideFive/index.jsx","pages/Signup/slides/SlideSix/index.jsx","pages/Signup/slides/SlideSeven/index.jsx","pages/Signup/slides/SlideEight/index.jsx","utils/string/validateCpf.js","store/ducks/Signup/service.js","store/ducks/Signup/index.js","pages/Signup/index.jsx","routes/index.js","pages/Home/index.jsx","components/Layout/AppLayout/NavBar/style.js","components/AppBarActions/index.jsx","components/Layout/AppLayout/NavBar/NavItem/styles.js","menus/index.js","components/Layout/AppLayout/NavBar/NavItem/index.jsx","components/Layout/AppLayout/NavBar/index.jsx","components/Layout/styles.js","components/Layout/index.jsx","App.jsx","store/reducers.js","store/index.js","index.js","store/ducks/Signer/service.js","store/ducks/Signer/index.js"],"names":["maskCpf","value","replace","maskCel","maskTellPhone","maskNumber","maskCnpj","formatDate","date","Intl","DateTimeFormat","year","month","day","format","Transition","React","forwardRef","props","ref","direction","RecoveryPassword","base64","useParams","enqueueSnackbar","useSnackbar","classes","useStyles","history","useHistory","dispatch","useDispatch","useState","open","setOpen","openDialog","setOpenDialog","showPassword","setShowPassword","state","useSelector","decodedData","Buffer","from","validationSchema","yup","password","required","matches","trim","confirmPassword","oneOf","formik","useFormik","initialValues","onSubmit","a","body","id","JSON","parse","sha256","toString","product","recoveryPassword","useEffect","signer","status","statusMessage","type","message","variant","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","component","maxWidth","className","backdrop","color","TransitionComponent","keepMounted","onClick","push","paper","form","handleSubmit","margin","fullWidth","name","onBlur","handleBlur","label","autoComplete","values","onChange","handleChange","error","touched","Boolean","errors","helperText","InputProps","endAdornment","position","onMouseDown","submit","makeStyles","theme","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","width","logo","height","zIndex","drawer","api","axios","create","baseURL","apiRecovery","lightTheme","createMuiTheme","primary","contrastText","inputcell","padding","float","marginLeft","primaryColor","paddingRight","paddingLeft","marginRight","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","buttonStyle","background","boxShadow","paddingTop","borderTop","fontFamily","fontWeight","lineHeight","textDecoration","button","minHeight","minWidth","border","borderRadius","fontSize","textTransform","letterSpacing","willChange","transition","textAlign","whiteSpace","verticalAlign","touchAction","cursor","top","transform","left","info","success","warning","danger","rose","white","twitter","facebook","google","github","simple","transparent","disabled","opacity","pointerEvents","lg","sm","round","block","link","justIcon","makeComponentStyles","RegularButton","children","size","rest","btnClasses","classNames","Button","resendTokenSms","token","console","log","get","headers","Authorization","res","changeCellphone","putCellphone","celular","put","sendTokenSMS","tokens","tokenSMS","resendSms","createAsyncThunk","rejectWithValue","data","response","editCellphone","confirmTokenSMS","createSlice","initialState","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","ButtonTimer","tokenSigner","tokenSignup","signup","buttonresend","setbuttonresend","durationTime","setduration","duration","timer","interval","setInterval","minutes","parseInt","seconds","$","html","clearInterval","StartTimer","style","sendValidationStatus","validationStatus","validation","Copyright","Typography","align","Link","href","Date","getFullYear","Slide","ClassBackground","styled","div","Background","emailValidationGet","emailValidation","email","Email","dispach","openModal","setOpenModal","Dialog","DialogTitle","ThumbUpAltOutlined","DialogContent","DialogContentText","DialogActions","CustomTabs","withStyles","indicator","Tabs","TabPanel","index","other","role","hidden","Box","p","container","backgroundImage","backgroundRepeat","breakpoints","down","manPc","cardStyle","postion","divCentralization","cardPJPF","labelUser","media","btnStepPostion","arrowIconNext","arrowIconBack","saveIcon","fieldCentralization","SlideOne","nextStep","Grid","item","xs","md","justify","Hidden","only","src","alt","gutterBottom","TextField","nome","senha","InputAdornment","IconButton","Visibility","VisibilityOff","senha2","rel","ArrowForward","SlideTwo","StepPF","previousStep","Card","CardActionArea","CardMedia","image","bg_card_gateway","title","CardContent","CardActions","bg_card_vileve","ArrowBack","getCountries","countries","map","country","abreviado","getCep","cep","getCnpj","cnpj","SlideThree","setCountries","selectedDateNasc","setSelectedDateNac","selectedDateEmissao","setSelectedDateEmissao","countriesNames","cpf","e","setFieldValue","target","inputProps","maxLength","newDate","handleDateChangeNasci","KeyboardButtonProps","nascimento","naturalidade","Autocomplete","options","getOptionLabel","option","nacionalidade","disableCloseOnSelect","noOptionsText","renderInput","params","select","estado_civil","MenuItem","rg","emissor","handleDateChangeEmissao","emissao","sexo","mae","pai","SlideFour","waitCep","length","then","setTimeout","logradouro","bairro","localidade","uf","handleCep","endereco","numero","complemento","cidade","estado","SlideFive","waitCnpj","alias","phone","phone_1","legal_nature","code","address","zip_code","street","neighborhood","city","number","handleCNPJ","telefone","site","razaosocial","cnae","nome_fantasia","ceppj","enderecopj","numeropj","bairropj","complementopj","cidadepj","estadopj","bancos","numeroBanco","nomeBanco","SlideSix","submitForm","isCaixa","setIsCaixa","xl","bancopj","agenciapj","contapj","visibility","operacaopj","pixpj","Save","SlideSeven","cpfPf","celularPf","nascimentoPf","naturalidadePf","nacionalidadePf","estadoCivilPf","rgPf","emissorPf","emissaoPf","sexoPf","maePf","paiPf","sitePf","SlideEight","cepPf","enderecoPf","numeroPf","bairroPf","complementoPf","cidadePf","estadoPf","validateCpf","strCPF","Soma","Resto","i","substring","postCnpj","post","postPf","createCnpj","createPf","signed","a11yProps","propTypes","PropTypes","node","any","isRequired","routes","path","private","signin","autoHideDuration","Container","Backdrop","CircularProgress","sendEmailRecovery","CssBaseline","FormControlLabel","control","Checkbox","mt","useTheme","dotActive","dotInactive","dot1","setDOT1","dot2","setDOT2","dot3","setDOT3","dot4","setDOT4","dot5","setDOT5","dot6","setDOT6","dot7","setDOT7","isCnpj","setIsCnpj","showDot","setShowDot","setValue","min","max","typeError","url","handleBackdrop","isOpen","undefined","usuario","pessoa","empresa","razao_social","telefone_fixo","conta","banco","agencia","operacao","pix","endereco_cnpj","endereco_cpf","justifyContent","newValue","indicatorColor","Tab","axis","onChangeIndex","elevation","messageCellphone","openBackDrop","setOpenBackDrop","validateSMSandEmail","setTOKEN","cellphone","setCELLPHONE","changeCell","autoFocus","v","Paper","iconButton","PhoneIphone","InputBase","placeholder","Edit","drawerWidth","root","up","flexShrink","appBar","menuButton","toolbar","mixins","toolBarBackGround","drawerPaper","content","flexGrow","toolbarIcon","paddingBottom","header","grow","sectionDesktop","sectionMobile","AppBarActions","menuId","mobileMenuId","mobileMoreAnchorEl","handleMobileMoreAnchorEl","anchorEl","handleAnchorEl","isMenuOpen","isMobileMenuOpen","handleMobileMenuClose","renderMenu","anchorOrigin","vertical","horizontal","transformOrigin","onClose","logOut","ExitToApp","renderMobileMenu","currentTarget","AccountCircle","nested","tollbar","sections","subheader","section","items","icon","LibraryAddCheck","NavItens","setOpenSection","Sections","List","ListItem","to","currentSection","findIndex","obj","newArray","handleClick","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","Icon","ListItemIcon","Divider","NavBar","window","mobileOpen","setMobileOpen","setAnchorEl","setMobileMoreAnchorEl","handleDrawerToggle","document","AppBar","Toolbar","edge","Menu","noWrap","MoreVert","smUp","implementation","Drawer","anchor","ModalProps","xsDown","route","exact","Layout","App","defaults","ThemeProvider","utils","DateFnsUtils","locale","ptBR","maxSnack","reducers","combineReducers","signerReducer","validationReducer","emailReducer","signupReducer","messageReducer","persistConfig","key","version","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","getElementById","signinPost","recoverPassword","sendEmailRecover","clearMessage","actions"],"mappings":"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","file":"static/js/main.2688a520.chunk.js","sourcesContent":["/**\n * Change a string to CPF format\n * @argument string\n * @returns string\n *\n */\n\nexport const maskCpf = (value) => {\n  value = value.replace(/\\D/g, '');\n  value = value.replace(/^(\\d{3})/g, '$1.');\n  value = value.replace(/(\\d{3})(\\d{3})/g, '$1.$2-');\n  return value;\n};\n\n/**\n * Change a string to Date dd/mm/aaaa format\n * @argument string\n * @returns string\n *\n */\nexport const maskDate = (value) => {\n  value = value.replace(/\\D/g, '');\n  value = value.replace(/^(\\d{2})(\\d)/g, '$1/$2');\n  value = value.replace(/(\\d)(\\d{4})$/, '$1/$2');\n  return value;\n};\n\n/**\n * Change a string to cellphone number (nn) nnnnn-nnn format\n * @argument string\n * @returns string\n *\n */\nexport const maskCel = (value) => {\n  value = value.replace(/\\D/g, ''); //Remove tudo o que não é dígito\n  value = value.replace(/^(\\d{2})(\\d)/g, '($1) $2'); //Coloca parênteses em volta dos dois primeiros dígitos\n  value = value.replace(/(\\d)(\\d{4})$/, '$1-$2'); //Coloca hífen entre o quarto e o quinto dígitos\n  return value;\n};\n\n/**\n * Change a string to tell number (nn) nnnn-nnn format\n * @argument string\n * @returns string\n *\n */\n\nexport const maskTellPhone = (value) => {\n  if (value) {\n    value = value.replace(/\\D/g, ''); //Remove tudo o que não é dígito\n    value = value.replace(/^(\\d{2})(\\d)/g, '($1) $2'); //Coloca parênteses em volta dos dois primeiros dígitos\n    value = value.replace(/(\\d)(\\d{4})$/, '$1-$2'); //Coloca hífen entre o quarto e o quinto dígitos\n    return value;\n  }\n\n  return '';\n};\n\n/**\n * Return string with number(s)\n * @argument string\n * @returns string\n *\n */\nexport const maskNumber = (value) => {\n  if (value) {\n    value = value.replace(/\\D/g, '');\n    return value;\n  }\n  return '';\n};\n\nexport const maskCnpj = (value) => {\n  if (value) {\n    let formatedNum = '';\n    formatedNum = value.replace(/\\D/g, '');\n    formatedNum = formatedNum.replace(/^(\\d{2})(\\d)/, '$1.$2');\n    formatedNum = formatedNum.replace(/^(\\d{2})\\.(\\d{3})(\\d)/, '$1.$2.$3');\n    formatedNum = formatedNum.replace(/\\.(\\d{3})(\\d)/, '.$1/$2');\n    formatedNum = formatedNum.replace(/(\\d{4})(\\d)/, '$1-$2');\n    formatedNum = formatedNum.replace(/(-\\d{2})\\d+?$/, '$1');\n    return formatedNum;\n  }\n  return '';\n};\n\n/**\n * Change a date to yyyy-mm-dd\n * @argument date\n * @returns string\n *\n */\n\nexport const formatDate = (date) => {\n  const newDate = new Intl.DateTimeFormat('fr-CA', {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n  }).format(date);\n\n  return newDate;\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Slide,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Link,\n  Grid,\n  Box,\n  Typography,\n  Container,\n  Backdrop,\n  InputAdornment,\n  IconButton,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport sha256 from \"crypto-js/sha256\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { useSnackbar } from \"notistack\";\nimport { useStyles } from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { maskCpf, maskCel } from \"../../utils/string/masks\";\nimport { recoveryPassword } from \"../../store/ducks/Signer\";\nimport { useParams } from \"react-router-dom\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function RecoveryPassword() {\n  const { base64 } = useParams();\n  const { enqueueSnackbar } = useSnackbar();\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const state = useSelector((state) => state);\n  const decodedData = Buffer.from(base64, \"base64\");\n\n  const validationSchema = yup.object({\n    password: yup\n      .string()\n      .required(\"O campo senha é obrigatório\")\n      .matches(\n        /^(?=.*?[A-Z])(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W]){1,})(?!.*\\s).{8,}$/,\n        `A senha deve conter mínimo de oito caracteres, pelo menos, uma letra maiúscula, uma letra minúscula, números e um caractere especial`\n      )\n      .trim(),\n    confirmPassword: yup\n      .string()\n      .required(\"O campo confirmação de senha é obrigatório\")\n      .oneOf([yup.ref(\"password\"), null], \"Senhas devem ser iguais.\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      password: \"\",\n      confirmPassword: \"\",\n    },\n    validationSchema,\n    onSubmit: async ({\n      password,\n      confirmPassword,\n    }) => {\n      const body = {\n        id : JSON.parse(decodedData).id,\n        password: sha256(password).toString().trim(),\n        product: \"dev-vilevewayclient\"        \n      };\n      dispatch(await recoveryPassword(body));\n    },\n  });\n\n  useEffect(() => {\n    if (state.signer.status === \"completed\") {\n      setOpen(false);\n\n      if (state.signer.statusMessage === \"success\" && state.signer.type === \"recoveryPassword\") {\n        setOpenDialog(true);\n      }\n      enqueueSnackbar(state.signer.message, {\n        variant: state.signer.statusMessage,\n      });\n    } else if (state.signer.status === \"loading\") {\n      setOpen(true);\n    } else if (state.signer.status === \"failed\") {\n      setOpen(false);\n      enqueueSnackbar(state.signer.message, {\n        variant: state.signer.statusMessage,\n      });\n    }\n  }, [state.signer.status]);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleRedirect = () => {\n    history.push(\"/signin\");\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Backdrop className={classes.backdrop} open={open}>\n        <CircularProgress color=\"primary\" />\n      </Backdrop>\n\n      <Dialog\n        open={openDialog}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          {\"Solicitação de recuperação de senha efetuada:\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {state.signer.message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRedirect} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <CssBaseline />\n\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Recuperar senha:\n        </Typography>\n\n        <form className={classes.form} onSubmit={formik.handleSubmit}>\n          \n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            onBlur={formik.handleBlur}\n            label=\"Senha\"\n            type={showPassword ? \"text\" : \"password\"}\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirmPassword\"\n            onBlur={formik.handleBlur}\n            label=\"Confirmação de senha\"\n            type={showPassword ? \"text\" : \"password\"}\n            id=\"confirmPassword\"\n            autoComplete=\"current-password\"\n            value={formik.values.confirmPassword}\n            onChange={formik.handleChange}\n            error={\n              formik.touched.confirmPassword &&\n              Boolean(formik.errors.confirmPassword)\n            }\n            helperText={\n              formik.touched.confirmPassword && formik.errors.confirmPassword\n            }\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Concluir\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  logo: {\n    height: \"50%\",\n    width: \"50%\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    // backgroudColor: \"#000\",\n  },\n}));\n","import axios from \"axios\";\n// const url = \"http://3.233.0.255:3001/api/v1\";\n\nconst api = axios.create({\n  baseURL: \"https://vileveway-backend-lb-develop.vileveway.com.br/api/v1\",\n});\n\nconst apiRecovery = axios.create({\n  baseURL: \"https://apirecoverypassword-backend-lb-develop.vileveway.com.br/api/v1\",\n});\n\nexport { api, apiRecovery };\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\n//para criar tema, verificar https://material-ui.com/pt/customization/default-theme/\nconst lightTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#005882\",\n      // secondary: \"#BFD72D\",\n    },\n    secondary: {\n      main: \"#BFD72D\",\n      contrastText: \"#005882\",\n    },\n    type: \"light\",\n  },\n});\n\nexport default lightTheme;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 250;\n\nexport const useStyles = makeStyles((theme) => ({\n  backdrop: { zIndex: 9999 },\n\n  inputcell: {\n    padding: \"3px 4px\",\n    display: \"flex\",\n    float: \"left\",\n    marginLeft: 5,\n    width: 210,\n  },\n}));\n","/*!\n\n =========================================================\n * Material Kit React - v1.10.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\n};\n\nconst containerFluid = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\",\n  width: \"100%\",\n};\nconst container = {\n  ...containerFluid,\n  \"@media (min-width: 576px)\": {\n    maxWidth: \"540px\",\n  },\n  \"@media (min-width: 768px)\": {\n    maxWidth: \"720px\",\n  },\n  \"@media (min-width: 992px)\": {\n    maxWidth: \"960px\",\n  },\n  \"@media (min-width: 1200px)\": {\n    maxWidth: \"1140px\",\n  },\n};\n\nconst boxShadow = {\n  boxShadow:\n    \"0 10px 30px -12px rgba(0, 0, 0, 0.42), 0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\",\n};\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(0, 0, 0, 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(0, 0, 0, 0.87)\",\n  background: \"#fff\",\n};\n\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\",\n};\n\nconst primaryColor = \"#9c27b0\";\nconst warningColor = \"#ff9800\";\nconst dangerColor = \"#f44336\";\nconst successColor = \"#4caf50\";\nconst infoColor = \"#00acc1\";\nconst roseColor = \"#e91e63\";\nconst grayColor = \"#999999\";\n\nconst primaryBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(156, 39, 176, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(156, 39, 176, 0.2)\",\n};\nconst infoBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(0, 188, 212, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(0, 188, 212, 0.2)\",\n};\nconst successBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(76, 175, 80, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(76, 175, 80, 0.2)\",\n};\nconst warningBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(255, 152, 0, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(255, 152, 0, 0.2)\",\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(244, 67, 54, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(244, 67, 54, 0.2)\",\n};\nconst roseBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 10px -5px rgba(233, 30, 99, 0.4)\",\n};\n\nconst warningCardHeader = {\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #ffa726, #fb8c00)\",\n  ...warningBoxShadow,\n};\nconst successCardHeader = {\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #66bb6a, #43a047)\",\n  ...successBoxShadow,\n};\nconst dangerCardHeader = {\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #ef5350, #e53935)\",\n  ...dangerBoxShadow,\n};\nconst infoCardHeader = {\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #26c6da, #00acc1)\",\n  ...infoBoxShadow,\n};\nconst primaryCardHeader = {\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #ab47bc, #8e24aa)\",\n  ...primaryBoxShadow,\n};\nconst roseCardHeader = {\n  color: \"#fff\",\n  background: \"linear-gradient(60deg, #ec407a, #d81b60)\",\n  ...roseBoxShadow,\n};\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid #eeeeee\",\n  height: \"auto\",\n  ...defaultFont,\n};\n\nconst cardHeader = {\n  margin: \"-30px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\",\n};\n\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow:\n    \"0 10px 20px -12px rgba(0, 0, 0, 0.42), 0 3px 20px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\",\n};\n\nconst title = {\n  color: \"#3C4858\",\n  margin: \"1.75rem 0 0.875rem\",\n  textDecoration: \"none\",\n  fontWeight: \"700\",\n  fontFamily: `\"Roboto Slab\", \"Times New Roman\", serif`,\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: \".625rem\",\n};\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\",\n  },\n};\n\nconst cardSubtitle = {\n  marginBottom: \"0\",\n  marginTop: \"-.375rem\",\n};\n\nexport {\n  //variables\n  drawerWidth,\n  transition,\n  container,\n  containerFluid,\n  boxShadow,\n  card,\n  defaultFont,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardLink,\n  cardSubtitle,\n};\n","import {\n  grayColor,\n  roseColor,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n} from \"assets/jss/material-kit-react.js\";\n\nconst buttonStyle = {\n  button: {\n    minHeight: \"auto\",\n    minWidth: \"auto\",\n    backgroundColor: grayColor,\n    color: \"#FFFFFF\",\n    boxShadow:\n      \"0 2px 2px 0 rgba(153, 153, 153, 0.14), 0 3px 1px -2px rgba(153, 153, 153, 0.2), 0 1px 5px 0 rgba(153, 153, 153, 0.12)\",\n    border: \"none\",\n    borderRadius: \"3px\",\n    position: \"relative\",\n    padding: \"12px 30px\",\n    margin: \".3125rem 1px\",\n    fontSize: \"12px\",\n    fontWeight: \"400\",\n    textTransform: \"uppercase\",\n    letterSpacing: \"0\",\n    willChange: \"box-shadow, transform\",\n    transition:\n      \"box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1)\",\n    lineHeight: \"1.42857143\",\n    textAlign: \"center\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    touchAction: \"manipulation\",\n    cursor: \"pointer\",\n    \"&:hover,&:focus\": {\n      color: \"#FFFFFF\",\n      backgroundColor: grayColor,\n      boxShadow:\n        \"0 14px 26px -12px rgba(153, 153, 153, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(153, 153, 153, 0.2)\",\n    },\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      fontSize: \"1.1rem\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\",\n    },\n    \"& svg\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      width: \"18px\",\n      height: \"18px\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\",\n    },\n    \"&$justIcon\": {\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        marginRight: \"0px\",\n        position: \"absolute\",\n        width: \"100%\",\n        transform: \"none\",\n        left: \"0px\",\n        top: \"0px\",\n        height: \"100%\",\n        lineHeight: \"41px\",\n        fontSize: \"20px\",\n      },\n    },\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  primary: {\n    backgroundColor: primaryColor,\n    boxShadow:\n      \"0 2px 2px 0 rgba(156, 39, 176, 0.14), 0 3px 1px -2px rgba(156, 39, 176, 0.2), 0 1px 5px 0 rgba(156, 39, 176, 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: primaryColor,\n      boxShadow:\n        \"0 14px 26px -12px rgba(156, 39, 176, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(156, 39, 176, 0.2)\",\n    },\n  },\n  info: {\n    backgroundColor: infoColor,\n    boxShadow:\n      \"0 2px 2px 0 rgba(0, 188, 212, 0.14), 0 3px 1px -2px rgba(0, 188, 212, 0.2), 0 1px 5px 0 rgba(0, 188, 212, 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: infoColor,\n      boxShadow:\n        \"0 14px 26px -12px rgba(0, 188, 212, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 188, 212, 0.2)\",\n    },\n  },\n  success: {\n    backgroundColor: successColor,\n    boxShadow:\n      \"0 2px 2px 0 rgba(76, 175, 80, 0.14), 0 3px 1px -2px rgba(76, 175, 80, 0.2), 0 1px 5px 0 rgba(76, 175, 80, 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: successColor,\n      boxShadow:\n        \"0 14px 26px -12px rgba(76, 175, 80, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(76, 175, 80, 0.2)\",\n    },\n  },\n  warning: {\n    backgroundColor: warningColor,\n    boxShadow:\n      \"0 2px 2px 0 rgba(255, 152, 0, 0.14), 0 3px 1px -2px rgba(255, 152, 0, 0.2), 0 1px 5px 0 rgba(255, 152, 0, 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: warningColor,\n      boxShadow:\n        \"0 14px 26px -12px rgba(255, 152, 0, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(255, 152, 0, 0.2)\",\n    },\n  },\n  danger: {\n    backgroundColor: dangerColor,\n    boxShadow:\n      \"0 2px 2px 0 rgba(244, 67, 54, 0.14), 0 3px 1px -2px rgba(244, 67, 54, 0.2), 0 1px 5px 0 rgba(244, 67, 54, 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: dangerColor,\n      boxShadow:\n        \"0 14px 26px -12px rgba(244, 67, 54, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(244, 67, 54, 0.2)\",\n    },\n  },\n  rose: {\n    backgroundColor: roseColor,\n    boxShadow:\n      \"0 2px 2px 0 rgba(233, 30, 99, 0.14), 0 3px 1px -2px rgba(233, 30, 99, 0.2), 0 1px 5px 0 rgba(233, 30, 99, 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: roseColor,\n      boxShadow:\n        \"0 14px 26px -12px rgba(233, 30, 99, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(233, 30, 99, 0.2)\",\n    },\n  },\n  white: {\n    \"&,&:focus,&:hover,&:visited\": {\n      backgroundColor: \"#FFFFFF\",\n      color: grayColor,\n    },\n  },\n  twitter: {\n    backgroundColor: \"#55acee\",\n    color: \"#fff\",\n    boxShadow:\n      \"0 2px 2px 0 rgba(85, 172, 238, 0.14), 0 3px 1px -2px rgba(85, 172, 238, 0.2), 0 1px 5px 0 rgba(85, 172, 238, 0.12)\",\n    \"&:hover,&:focus,&:visited\": {\n      backgroundColor: \"#55acee\",\n      color: \"#fff\",\n      boxShadow:\n        \"0 14px 26px -12px rgba(85, 172, 238, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(85, 172, 238, 0.2)\",\n    },\n  },\n  facebook: {\n    backgroundColor: \"#3b5998\",\n    color: \"#fff\",\n    boxShadow:\n      \"0 2px 2px 0 rgba(59, 89, 152, 0.14), 0 3px 1px -2px rgba(59, 89, 152, 0.2), 0 1px 5px 0 rgba(59, 89, 152, 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: \"#3b5998\",\n      color: \"#fff\",\n      boxShadow:\n        \"0 14px 26px -12px rgba(59, 89, 152, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(59, 89, 152, 0.2)\",\n    },\n  },\n  google: {\n    backgroundColor: \"#dd4b39\",\n    color: \"#fff\",\n    boxShadow:\n      \"0 2px 2px 0 rgba(221, 75, 57, 0.14), 0 3px 1px -2px rgba(221, 75, 57, 0.2), 0 1px 5px 0 rgba(221, 75, 57, 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: \"#dd4b39\",\n      color: \"#fff\",\n      boxShadow:\n        \"0 14px 26px -12px rgba(221, 75, 57, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(221, 75, 57, 0.2)\",\n    },\n  },\n  github: {\n    backgroundColor: \"#333333\",\n    color: \"#fff\",\n    boxShadow:\n      \"0 2px 2px 0 rgba(51, 51, 51, 0.14), 0 3px 1px -2px rgba(51, 51, 51, 0.2), 0 1px 5px 0 rgba(51, 51, 51, 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: \"#333333\",\n      color: \"#fff\",\n      boxShadow:\n        \"0 14px 26px -12px rgba(51, 51, 51, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(51, 51, 51, 0.2)\",\n    },\n  },\n  simple: {\n    \"&,&:focus,&:hover,&:visited\": {\n      color: \"#FFFFFF\",\n      background: \"transparent\",\n      boxShadow: \"none\",\n    },\n    \"&$primary\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: primaryColor,\n      },\n    },\n    \"&$info\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: infoColor,\n      },\n    },\n    \"&$success\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: successColor,\n      },\n    },\n    \"&$warning\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: warningColor,\n      },\n    },\n    \"&$rose\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: roseColor,\n      },\n    },\n    \"&$danger\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: dangerColor,\n      },\n    },\n    \"&$twitter\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: \"#55acee\",\n      },\n    },\n    \"&$facebook\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: \"#3b5998\",\n      },\n    },\n    \"&$google\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: \"#dd4b39\",\n      },\n    },\n    \"&$github\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: \"#333333\",\n      },\n    },\n  },\n  transparent: {\n    \"&,&:focus,&:hover,&:visited\": {\n      color: \"inherit\",\n      background: \"transparent\",\n      boxShadow: \"none\",\n    },\n  },\n  disabled: {\n    opacity: \"0.65\",\n    pointerEvents: \"none\",\n  },\n  lg: {\n    padding: \"1.125rem 2.25rem\",\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.333333\",\n    borderRadius: \"0.2rem\",\n  },\n  sm: {\n    padding: \"0.40625rem 1.25rem\",\n    fontSize: \"0.6875rem\",\n    lineHeight: \"1.5\",\n    borderRadius: \"0.2rem\",\n  },\n  round: {\n    borderRadius: \"30px\",\n  },\n  block: {\n    width: \"100% !important\",\n  },\n  link: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: \"transparent\",\n      color: \"#999999\",\n      boxShadow: \"none\",\n    },\n  },\n  justIcon: {\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    fontSize: \"20px\",\n    height: \"41px\",\n    minWidth: \"41px\",\n    width: \"41px\",\n    \"& .fab,& .fas,& .far,& .fal,& svg,& .material-icons\": {\n      marginRight: \"0px\",\n    },\n    \"&$lg\": {\n      height: \"57px\",\n      minWidth: \"57px\",\n      width: \"57px\",\n      lineHeight: \"56px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"32px\",\n        lineHeight: \"56px\",\n      },\n      \"& svg\": {\n        width: \"32px\",\n        height: \"32px\",\n      },\n    },\n    \"&$sm\": {\n      height: \"30px\",\n      minWidth: \"30px\",\n      width: \"30px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"17px\",\n        lineHeight: \"29px\",\n      },\n      \"& svg\": {\n        width: \"17px\",\n        height: \"17px\",\n      },\n    },\n  },\n};\n\nexport default buttonStyle;\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// @material-ui/core components\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\n\n// core components\n\nimport buttonStyle from \"assets/jss/material-kit-react/components/buttonStyle.js\";\n\nconst makeComponentStyles = makeStyles(() => ({\n  ...buttonStyle,\n}));\n\nconst RegularButton = React.forwardRef((props, ref) => {\n  const {\n    color,\n    round,\n    children,\n    fullWidth,\n    disabled,\n    simple,\n    size,\n    block,\n    link,\n    justIcon,\n    className,\n    ...rest\n  } = props;\n\n  const classes = makeComponentStyles();\n\n  const btnClasses = classNames({\n    [classes.button]: true,\n    [classes[size]]: size,\n    [classes[color]]: color,\n    [classes.round]: round,\n    [classes.fullWidth]: fullWidth,\n    [classes.disabled]: disabled,\n    [classes.simple]: simple,\n    [classes.block]: block,\n    [classes.link]: link,\n    [classes.justIcon]: justIcon,\n    [className]: className,\n  });\n  return (\n    <Button {...rest} ref={ref} className={btnClasses}>\n      {children}\n    </Button>\n  );\n});\n\nRegularButton.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\",\n    \"white\",\n    \"facebook\",\n    \"twitter\",\n    \"google\",\n    \"github\",\n    \"transparent\",\n  ]),\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  disabled: PropTypes.bool,\n  block: PropTypes.bool,\n  link: PropTypes.bool,\n  justIcon: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nexport default RegularButton;\n","import { api } from \"../../../services/api\";\n\n// const resendToken = async (token) => {\n//   const res = await api.get(`/validation/sms/${token}`, {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//     },\n//   });\n\n//   return res;\n// };\n\nconst resendTokenSms = async (token) => {\n  console.log(token);\n  const res = await api.get(`/validation/resendsms`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return res;\n};\n\nconst changeCellphone = async (putCellphone) => {\n  const { token, celular } = putCellphone;\n  const res = await api.put(\n    `/person/cellphone`,\n    { celular },\n    {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }\n  );\n  return res;\n};\n\nconst sendTokenSMS = async (tokens) => {\n  console.log(tokens);\n  const { tokenSMS, token } = tokens;\n  const res = await api.get(`/validation/sms/${tokenSMS}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return res;\n};\n\nexport { resendTokenSms, changeCellphone, sendTokenSMS };\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { resendTokenSms, changeCellphone, sendTokenSMS } from \"./service\";\n\nexport const resendSms = createAsyncThunk(\n  \"message/resendsms\",\n  async (token, { rejectWithValue }) => {\n    try {\n      const { data } = await resendTokenSms(token);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const editCellphone = createAsyncThunk(\n  \"message/changeCellphone\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const { data } = await changeCellphone(body);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const confirmTokenSMS = createAsyncThunk(\n  \"message/confirmTokenSMS\",\n  async (tokens, { rejectWithValue }) => {\n    try {\n      const { data } = await sendTokenSMS(tokens);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  message: null,\n  status: \"idle\",\n  type: \"\",\n};\n\nconst message = createSlice({\n  name: \"message\",\n  initialState,\n  extraReducers: (builder) => {\n    builder\n      .addCase(resendSms.pending, (state) => {\n        return (state = { ...state, status: \"pending\", type: \"SMS\" });\n      })\n      .addCase(resendSms.fulfilled, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"completed\",\n          message: action.payload.message,\n          type: \"SMS\",\n        });\n      })\n      .addCase(resendSms.rejected, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"failed\",\n          message: action.payload.message,\n          type: \"SMS\",\n        });\n      })\n      .addCase(editCellphone.pending, (state) => {\n        return (state = {\n          ...state,\n          status: \"pending\",\n          type: \"editCellphone\",\n        });\n      })\n      .addCase(editCellphone.fulfilled, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"completed\",\n          message: action.payload.message,\n          type: \"editCellphone\",\n        });\n      })\n      .addCase(editCellphone.rejected, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"failed\",\n          message: action.payload.message,\n          type: \"editCellphone\",\n        });\n      })\n      .addCase(confirmTokenSMS.pending, (state) => {\n        return (state = {\n          ...state,\n          status: \"pending\",\n          type: \"confirmTokenSMS\",\n        });\n      })\n      .addCase(confirmTokenSMS.fulfilled, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"completed\",\n          message: action.payload.message,\n          type: \"confirmTokenSMS\",\n        });\n      })\n      .addCase(confirmTokenSMS.rejected, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"failed\",\n          message: action.payload.message,\n          type: \"confirmTokenSMS\",\n        });\n      });\n  },\n});\n\nexport default message.reducer;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport $ from \"jquery\";\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resendSms } from \"../../store/ducks/Message\";\n\nconst ButtonTimer = () => {\n  const dispatch = useDispatch();\n  const {\n    signer: { token: tokenSigner },\n    signup: { token: tokenSignup },\n    message: { status, type },\n  } = useSelector((state) => state);\n  const { enqueueSnackbar } = useSnackbar();\n  const [buttonresend, setbuttonresend] = useState(true);\n  const [durationTime, setduration] = useState(1);\n\n  useEffect(() => {\n    if (status === \"completed\" && type === \"SMS\") {\n      enqueueSnackbar(\"SMS enviado com sucesso\", { variant: \"success\" });\n    } else if (status === \"failed\" && type === \"SMS\") {\n      enqueueSnackbar(\"Token não validado\", { variant: \"error\" });\n    }\n  }, [status]);\n\n  const resendToken = () => {\n    setduration(durationTime + 1);\n    setbuttonresend(true);\n    console.log(tokenSigner);\n    if (!!tokenSignup) {\n      dispatch(resendSms(tokenSignup));\n    } else {\n      dispatch(resendSms(tokenSigner));\n    }\n  };\n\n  const StartTimer = (duration) => {\n    if (buttonresend) {\n      let timer = duration * 60;\n      let interval = setInterval(function () {\n        let minutes = parseInt(timer / 60, 10);\n        let seconds = parseInt(timer % 60, 10);\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n        $(\"#timersend\").html(minutes + \":\" + seconds);\n        if (--timer < 0) {\n          timer = duration;\n          clearInterval(interval);\n          $(\"#timersend\").html(\"\");\n          setbuttonresend(false);\n        }\n      }, 1000);\n    }\n  };\n\n  useEffect(() => {\n    StartTimer(durationTime);\n  }, [durationTime]);\n\n  return (\n    <Button\n      style={{ margin: 10 }}\n      onClick={resendToken}\n      variant=\"contained\"\n      size=\"sm\"\n      color=\"primary\"\n      disabled={buttonresend}\n    >\n      Reenviar SMS&nbsp;<div id=\"timersend\"></div>\n    </Button>\n  );\n};\nexport default ButtonTimer;\n","import { api } from \"../../../services/api\";\n\nconst sendValidationStatus = async (token) => {\n  const res = await api.get(`/validation/status`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return res;\n};\n\nexport { sendValidationStatus };\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { sendValidationStatus } from \"./service\";\n\nexport const validationStatus = createAsyncThunk(\n  \"validation/validationStatus\",\n  async (token, { rejectWithValue }) => {\n    try {\n      const { data } = await sendValidationStatus(token);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  message: null,\n  status: \"idle\",\n  celular: 0,\n};\n\nconst validation = createSlice({\n  name: \"validation\",\n  initialState,\n  extraReducers: (builder) => {\n    builder\n      .addCase(validationStatus.pending, (state) => {\n        return (state = { ...state, status: \"pending\" });\n      })\n      .addCase(validationStatus.fulfilled, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"completed\",\n          message: action.payload.message,\n          celular: action.payload.celular,\n        });\n      })\n      .addCase(validationStatus.rejected, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"failed\",\n          message: action.payload.message,\n        });\n      });\n  },\n});\n\n// export const { addSelectedGroups, clearUser, clearSelectedGroups } =\n//   validation.actions;\n\nexport default validation.reducer;\n","export default __webpack_public_path__ + \"static/media/logo_vileve_way.154c5d89.png\";","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  logo: {\n    height: \"50%\",\n    width: \"50%\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#e6e6e6\",\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  CssBaseline,\n  TextField,\n  Slide,\n  FormControlLabel,\n  Checkbox,\n  Link,\n  Grid,\n  Box,\n  Typography,\n  Container,\n  Backdrop,\n  InputAdornment,\n  IconButton,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport sha256 from \"crypto-js/sha256\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { useSnackbar } from \"notistack\";\nimport logo from \"../../assets/images/logo_vileve_way.png\";\nimport { useStyles } from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { signin, sendEmailRecovery } from \"../../store/ducks/Signer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://vileve.com.br/\">\n        Vileve\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SignIn() {\n  const { enqueueSnackbar } = useSnackbar();\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const state = useSelector((state) => state);\n\n  const validationSchema = yup.object({\n    email: yup\n      .string()\n      .email(\"Não é um email valido\")\n      .required(\"O campo email é obrigatório\"),\n    password: yup.string().required(\"O campo senha é obrigatório\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema,\n    onSubmit: ({ email, password }) => {\n      const body = {\n        email,\n        // senha: sha256(password).toString().trim(),\n        senha: sha256(password).toString().trim(),\n      };\n      dispatch(signin(body));\n    },\n  });\n\n  useEffect(() => {\n    if (state.signer.status === \"completed\") {\n      setOpen(false);\n      enqueueSnackbar(state.signer.message, {\n        variant: state.signer.statusMessage,\n        autoHideDuration: 2000,\n      });\n      if (state.signer.signed) {\n        history.push(\"/\");\n      }\n    } else if (state.signer.status === \"loading\") {\n      setOpen(true);\n    } else if (state.signer.status === \"failed\") {\n      setOpen(false);\n      enqueueSnackbar(state.signer.message, {\n        variant: \"error\",\n      });\n    }\n  }, [state.signer.status, state.signer.message]);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleClickOpen = () => {\n    setOpenDialog(true);\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const handleSend = () => {\n    const body = {\n      email: formik.values.email,\n      product: \"dev-vilevewayclient\",\n    };\n    dispatch(sendEmailRecovery(body));\n    setOpenDialog(false);\n    setOpen(true);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Backdrop className={classes.backdrop} open={open}>\n        <CircularProgress color=\"primary\" />\n      </Backdrop>\n\n      <Dialog\n        open={openDialog}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          {\"Esqueci a senha\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Digite seu e-mail de cadastro abaixo e clique em enviar. <br /> Nós\n            lhe enviaremos um e-mail com link para recadastrar sua senha.\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"outlined-required\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              helperText={formik.touched.email && formik.errors.email}\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancelar</Button>\n          <Button onClick={handleSend}>Enviar</Button>\n        </DialogActions>\n      </Dialog>\n\n      <CssBaseline />\n\n      <div className={classes.paper}>\n        <img src={logo} className={classes.logo} alt=\"logotipo vileve way\" />\n        {/* <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar> */}\n        {/* <Typography component=\"h1\" variant=\"h5\">\n          Vileve Gateway\n        </Typography> */}\n        <form className={classes.form} onSubmit={formik.handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Senha\"\n            type={showPassword ? \"text\" : \"password\"}\n            id=\"password\"\n            onBlur={formik.handleBlur}\n            autoComplete=\"current-password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Lembrar-me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Entrar\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\" onClick={handleClickOpen}>\n                Esqueceu a senha?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                Não tem uma conta? Cadastre-se\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/backgroundpresentation.a75986e8.png\";","import styled from \"styled-components\";\nimport Background from \"../../assets/images/backgroundpresentation.png\";\n\nexport const ClassBackground = styled.div`\n  background-image: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1)),\n    url(${Background});\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-attachment: fixed;\n  background-repeat: no-repeat;\n  background-size: cover;\n  -moz-background-size: cover;\n  overflow-x: hidden;\n  overflow-y: hidden;\n`;\n","import { api } from \"../../../services/api\";\n\nconst emailValidationGet = async (token) => {\n  const res = await api.get(`/validation/email/${token}`);\n  return res;\n};\n\nexport { emailValidationGet };\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { emailValidationGet } from \"./service\";\n\nexport const emailValidation = createAsyncThunk(\n  \"email/emailValidation\",\n  async (token, { rejectWithValue }) => {\n    try {\n      const { data } = await emailValidationGet(token);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  status: \"idle\",\n  message: \"\"\n};\nconst email = createSlice({\n  name: \"email\",\n  initialState,\n  extraReducers: (builder) => {\n    builder\n      .addCase(emailValidation.pending, (state) => {\n        return (state = { ...state, status: \"loading\" });\n      })\n      .addCase(emailValidation.fulfilled, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"completed\",\n          message: action.payload.message\n        });\n      })\n      .addCase(emailValidation.rejected, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"failed\",\n          message: action.payload.message\n        });\n      });\n  },\n});\n\nexport default email.reducer;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContentText,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ThumbUpAltOutlined } from \"@material-ui/icons/\";\nimport { ClassBackground } from \"./styles\";\n\nimport { emailValidation } from \"../../store/ducks/Email\";\n\nconst Email = () => {\n  const { token } = useParams();\n  const { status, message } = useSelector((state) => {\n    return state.email;\n  });\n\n  const history = useHistory();  \n  const dispach = useDispatch();\n\n  const [openModal, setOpenModal] = useState(false);\n\n  useEffect(() => {\n    switch (status) {\n      case \"completed\":\n        setOpenModal(true);\n        break;\n\n      case \"failed\":\n        setOpenModal(true);\n        break;\n\n      default:\n        setOpenModal(false);\n        break;\n    }\n  }, [status]);\n\n  useEffect(() => {\n    dispach(emailValidation(token));\n  }, []);\n\n  const handleRedirect = () => {\n    history.push(\"/signin\");\n  };\n\n  return (\n    <>\n      <Dialog open={openModal} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">\n          {status === \"completed\" ? (\n            <span>\n              <ThumbUpAltOutlined /> Seja Bem Vindo ao Grupo Vileve\n            </span>\n          ) : (\n            <span>Seu email não foi válidado</span>\n          )}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"form-dialog-body\">{message}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleRedirect}\n            color={status === \"completed\" ? \"success\" : \"danger\"}\n          >\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <ClassBackground></ClassBackground>\n    </>\n  );\n};\nexport default Email;\n","import { withStyles } from \"@material-ui/core/styles\";\nimport { Tabs } from \"@material-ui/core\";\n\nexport const CustomTabs = withStyles({\n  indicator: {\n    backgroundColor: \"white\",\n  },\n})(Tabs);\n","import { Typography, Box } from \"@material-ui/core\";\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","export default __webpack_public_path__ + \"static/media/register.9b190449.png\";","export default __webpack_public_path__ + \"static/media/White-Abstract.804244a6.jpg\";","import styled from 'styled-components';\nimport Background from '../../assets/images/White-Abstract.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    backgroundImage: `url(${Background})`,\n    backgroundRepeat: 'repeat-y',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    [theme.breakpoints.down('xs')]: {\n      height: '200%',\n    },\n  },\n  logo: {\n    width: '150px',\n    marginLeft: '7%',\n    margin: '30px',\n  },\n  manPc: {\n    width: '60%',\n  },\n  cardStyle: {\n    // transform: \"scale(0.95)\",\n    postion: 'absolute',\n  },\n  divCentralization: {\n    padding: 20,\n    marginTop: '20px',\n  },\n  cardPJPF: {\n    maxWidth: '18rem',\n  },\n  label: {\n    color: '#999',\n  },\n  labelUser: {\n    color: '#005882',\n  },\n  media: {\n    height: 200,\n  },\n  btnStepPostion: {\n    margin: theme.spacing(3),\n  },\n  arrowIconNext: {\n    marginLeft: 10,\n  },\n  arrowIconBack: {\n    marginRight: 10,\n  },\n  saveIcon: {\n    marginLeft: 10,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#e6e6e6',\n  },\n  fieldCentralization: {\n    marginTop: '0px',\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Hidden,\n  Typography,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n} from \"@material-ui/core\";\n\nimport { ArrowForward, Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport manPc from \"../../../../assets/images/register.png\";\nimport { useStyles } from \"../../styles\";\n\nexport const SlideOne = ({ nextStep, formik }) => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  useEffect(() => {\n    return () => {};\n  });\n  return (\n    <Grid item xs={12} md={12}>\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={5}>\n        <Hidden only={[\"xs\", \"sm\"]}>\n          <Grid item md={6}>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <img src={manPc} className={classes.manPc} alt=\"logotipo\" />\n            </Grid>\n          </Grid>\n        </Hidden>\n        <Grid item xs={12} md={6}>\n          <div className={classes.divCentralization}>\n            <Grid container direction=\"column\" spacing={3}>\n              <Grid item xs={12} sm={12}>\n                <Grid container>\n                  <Grid item>\n                    <Typography\n                      variant=\"body1\"\n                      gutterBottom\n                      className={classes.label}\n                    >\n                      Informe os dados de{\" \"}\n                      <span className={classes.labelUser}>Usuário</span>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <TextField\n                  id=\"nome\"\n                  name=\"nome\"\n                  label=\"NOME COMPLETO\"\n                  onChange={formik.handleChange}\n                  value={formik.values.nome}\n                  onBlur={formik.handleBlur}\n                  error={formik.touched.nome && Boolean(formik.errors.nome)}\n                  helperText={formik.touched.nome && formik.errors.nome}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <TextField\n                  id=\"email\"\n                  name=\"email\"\n                  label=\"EMAIL\"\n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                  onBlur={formik.handleBlur}\n                  error={formik.touched.email && Boolean(formik.errors.email)}\n                  helperText={formik.touched.email && formik.errors.email}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <TextField\n                  id=\"senha\"\n                  name=\"senha\"\n                  label=\"SENHA\"\n                  value={formik.values.senha}\n                  onChange={formik.handleChange}\n                  value={formik.values.senha}\n                  onBlur={formik.handleBlur}\n                  error={formik.touched.senha && Boolean(formik.errors.senha)}\n                  helperText={formik.touched.senha && formik.errors.senha}\n                  type={showPassword ? \"text\" : \"password\"}\n                  required\n                  fullWidth\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={handleClickShowPassword}\n                          onMouseDown={handleMouseDownPassword}\n                        >\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <TextField\n                  id=\"senha2\"\n                  name=\"senha2\"\n                  label=\"CONFIRME SUA SENHA\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  onChange={formik.handleChange}\n                  value={formik.values.senha2}\n                  onBlur={formik.handleBlur}\n                  error={formik.touched.senha2 && Boolean(formik.errors.senha2)}\n                  helperText={formik.touched.senha2 && formik.errors.senha2}\n                  required\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={handleClickShowPassword}\n                          onMouseDown={handleMouseDownPassword}\n                        >\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  onChange={formik.handleChange}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <Grid container justify=\"flex-end\" alignItems=\"center\">\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"small\"\n                      id=\"BTNFIRSTNEXT\"\n                      rel=\"noopener noreferrer\"\n                      onClick={() => {\n                        nextStep();\n                      }}\n                      className={classes.btnStepPostion}\n                    >\n                      Próximo\n                      <ArrowForward className={classes.arrowIconNext} />\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/bg_card_assistencia.0a3066b1.jpg\";","export default __webpack_public_path__ + \"static/media/bg_card_vilevepay.b990363f.jpg\";","import React, { useEffect } from \"react\";\n\nimport {\n  Grid,\n  Hidden,\n  Typography,\n  Card as CardM,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\n\nimport { ArrowBack } from \"@material-ui/icons\";\nimport bg_card_vileve from \"../../../../assets/images/bg_card_assistencia.jpg\";\nimport bg_card_gateway from \"../../../../assets/images/bg_card_vilevepay.jpg\";\n// import Button from \"../../../../components/CustomButtons/Button\";\nimport manPc from \"../../../../assets/images/register.png\";\nimport { useStyles } from \"../../styles\";\n\nexport const SlideTwo = ({ nextStep, StepPF, previousStep }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    return () => {};\n  });\n\n  return (\n    <Grid item md={12}>\n      <div className={classes.divCentralization}>\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n          <Hidden only={[\"xs\", \"sm\"]}>\n            <Grid item md={6}>\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <img src={manPc} alt=\"logotipo\" className={classes.manPc} />\n              </Grid>\n            </Grid>\n          </Hidden>\n          <Grid item md={3}>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item>\n                <CardM className={classes.cardPJPF}>\n                  <CardActionArea>\n                    <CardMedia\n                      className={classes.media}\n                      image={bg_card_gateway}\n                      title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                      <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        Para Sua Empresa\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                      >\n                        Clique abaixo para contratar o produto Vileve\n                        Assitência.\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                  <CardActions>\n                    <Button\n                      id=\"BTNFIRSTNEXT2\"\n                      size=\"sm\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => nextStep()}\n                    >\n                      Pessoa Jurídica\n                    </Button>\n                  </CardActions>\n                </CardM>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item md={3}>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item>\n                <CardM className={classes.cardPJPF}>\n                  <CardActionArea>\n                    <CardMedia\n                      className={classes.media}\n                      image={bg_card_vileve}\n                      title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                      <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        Para Você\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                      >\n                        Clique abaixo para contratar o produto Vileve\n                        Assitência.\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                  <CardActions>\n                    <Button\n                      size=\"sm\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      id=\"BTNFIRSTNEXPF\"\n                      onClick={() => StepPF()}\n                    >\n                      Pessoa Física\n                    </Button>\n                  </CardActions>\n                </CardM>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container justify=\"flex-end\" alignItems=\"center\">\n          <Grid item>\n            <div>\n              <Button\n                id=\"BTNFIRSTBACK2\"\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"sm\"\n                rel=\"noopener noreferrer\"\n                onClick={() => previousStep()}\n                className={classes.btnStepPostion}\n              >\n                <ArrowBack className={classes.arrowIconBack} />\n                Anterior\n              </Button>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    </Grid>\n  );\n};\n","import axios from \"axios\";\n\nconst getCountries = async () => {\n  try {\n    const res = await axios.get(\n      \"https://servicodados.ibge.gov.br/api/v1/paises\"\n    );\n    const countries = res.data.map((country) => {\n      return country.nome.abreviado;\n    });\n\n    return countries;\n  } catch (error) {\n    return [\"Erro ao encontrar países\"];\n  }\n};\n\nconst getCep = async (value) => {\n  try {\n    const res = await axios.get(`https://viacep.com.br/ws/${value}/json`);\n    const cep = res.data;\n    return cep;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getCnpj = async (value) => {\n  try {\n    const res = await axios.get(\n      `https://consulta-empresa-cnpj-e-socios.p.rapidapi.com/cnpj/${value}`,\n      {\n        headers: {\n          \"x-rapidapi-key\":\n            \"bdac259fe4msh125d80880f7225ap14cc31jsn0ee569b9cbfd\",\n          \"x-rapidapi-host\": \"consulta-empresa-cnpj-e-socios.p.rapidapi.com\",\n        },\n      }\n    );\n    const cnpj = res.data;\n    return cnpj;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst postCnpj = async (body) => {\n  try {\n    const res = await axios.post(`${url}/signup/cnpj`, body);\n    return { sucess: true, res: res.data };\n  } catch (error) {\n    return { sucess: false, res: error.response.data.message };\n  }\n};\n\nconst postPf = async (body) => {\n  try {\n    const res = await axios.post(`${url}/signup/cpf`, body);\n    return { sucess: true, res: res.data };\n  } catch (error) {\n    return { sucess: false, res: error.response.data.message };\n  }\n};\n\nexport { getCountries, getCep, getCnpj, postCnpj, postPf };\n","import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Hidden,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ArrowForward, ArrowBack } from '@material-ui/icons';\nimport manPc from '../../../../assets/images/register.png';\nimport { useStyles } from '../../styles';\nimport { maskCpf, formatDate, maskCel } from '../../../../utils/string/masks';\nimport { getCountries } from '../../../../services/api/api';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n\nexport const SlideThree = ({ nextStep, previousStep, formik }) => {\n  const classes = useStyles();\n  const [countries, setCountries] = useState([]);\n  const [selectedDateNasc, setSelectedDateNac] = React.useState(\n    new Date('01/01/1980')\n  );\n  const [selectedDateEmissao, setSelectedDateEmissao] = React.useState(\n    new Date('01/01/2010')\n  );\n  useEffect(() => {\n    const countriesNames = async () => {\n      setCountries(await getCountries());\n    };\n\n    countriesNames();\n  }, []);\n\n  useEffect(() => {\n    return () => {};\n  });\n\n  const handleNationality = (event, value) => {\n    formik.setFieldValue('nacionalidade', value);\n  };\n\n  const handleDateChangeNasci = (date, value) => {\n    const newDate = formatDate(date);\n    setSelectedDateNac(date);\n    formik.setFieldValue('nascimento', newDate);\n  };\n\n  const handleDateChangeEmissao = (date, value) => {\n    const newDate = formatDate(date);\n    setSelectedDateEmissao(date);\n    formik.setFieldValue('emissao', newDate);\n  };\n\n  return (\n    <Grid item xs={12} md={12}>\n      <div className={classes.divCentralization}>\n        <Grid container justify='center' alignItems='center'>\n          <Hidden only={['xs', 'sm']}>\n            <Grid item md={4}>\n              <Grid container justify='center' alignItems='center'>\n                <img src={manPc} className={classes.manPc} alt='logotipo' />\n              </Grid>\n            </Grid>\n          </Hidden>\n          <Grid item md={8}>\n            <Grid container direction='column' spacing={3}>\n              <Grid item>\n                <Grid container>\n                  <Grid item>\n                    <Typography\n                      variant='body1'\n                      gutterBottom\n                      className={classes.label}\n                    >\n                      Informe os dados de{' '}\n                      <span className={classes.labelUser}>\n                        Representante Legal\n                      </span>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      id='cpf'\n                      name='cpf'\n                      label='CPF'\n                      value={formik.values.cpf}\n                      onChange={(e) => {\n                        formik.setFieldValue(\n                          e.target.id,\n                          maskCpf(e.target.value)\n                        );\n                        formik.handleChange(e);\n                      }}\n                      fullWidth\n                      inputProps={{ maxLength: 14 }}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      id='celular'\n                      name='celular'\n                      label='CELULAR'\n                      value={formik.values.celular}\n                      onChange={(e) => {\n                        formik.setFieldValue(\n                          e.target.id,\n                          maskCel(e.target.value)\n                        );\n                        formik.handleChange(e);\n                      }}\n                      value={formik.values.celular}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.celular && Boolean(formik.errors.celular)\n                      }\n                      helperText={\n                        formik.touched.celular && formik.errors.celular\n                      }\n                      fullWidth\n                      inputProps={{ maxLength: 15 }}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <KeyboardDatePicker\n                      id='nascimento'\n                      name='nascimento'\n                      margin='normal'\n                      label='Nascimento'\n                      className={classes.fieldCentralization}\n                      format='dd/MM/yyyy'\n                      value={selectedDateNasc}\n                      onChange={(date, value) => {\n                        handleDateChangeNasci(date, value);\n                      }}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.nascimento &&\n                        Boolean(formik.errors.nascimento)\n                      }\n                      helperText={\n                        formik.touched.nascimento && formik.errors.nascimento\n                      }\n                      inputProps={{ maxLength: 10 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      id='naturalidade'\n                      name='naturalidade'\n                      label='NATURALIDADE'\n                      value={formik.values.naturalidade}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.naturalidade &&\n                        Boolean(formik.errors.naturalidade)\n                      }\n                      helperText={\n                        formik.touched.naturalidade &&\n                        formik.errors.naturalidade\n                      }\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          e.target.value.replace(/[^a-zA-ZçÇ ]/g, '')\n                        )\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <Autocomplete\n                      options={countries}\n                      getOptionLabel={(option) => option}\n                      id='nacionalidade'\n                      onChange={handleNationality}\n                      value={formik.values.nacionalidade}\n                      disableCloseOnSelect\n                      noOptionsText={'País não encontrado'}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          className={classes.fieldCentralization}\n                          label='NACIONALIDADE'\n                          name='nacionalidade'\n                          margin='normal'\n                          onBlur={formik.handleBlur}\n                          error={\n                            formik.touched.nacionalidade &&\n                            Boolean(formik.errors.nacionalidade)\n                          }\n                          helperText={\n                            formik.touched.nacionalidade &&\n                            formik.errors.nacionalidade\n                          }\n                          fullWidth\n                          required\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      id='estado_civil'\n                      name='estado_civil'\n                      select\n                      label='ESTADO CIVIL'\n                      value={formik.values.estado_civil}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.estado_civil &&\n                        Boolean(formik.errors.estado_civil)\n                      }\n                      helperText={\n                        formik.touched.estado_civil &&\n                        formik.errors.estado_civil\n                      }\n                      fullWidth\n                      required\n                    >\n                      <MenuItem key='sl' value='Solteiro'>\n                        Solteiro\n                      </MenuItem>\n                      <MenuItem key='cs' value='Casado'>\n                        Casado\n                      </MenuItem>\n                      <MenuItem key='sp' value='Separado'>\n                        Separado\n                      </MenuItem>\n                      <MenuItem key='vi' value='Viuvo'>\n                        Viúvo\n                      </MenuItem>\n                      <MenuItem key='dv' value='Divorciado'>\n                        Divorciado\n                      </MenuItem>\n                    </TextField>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6} md={3}>\n                    <TextField\n                      id='rg'\n                      name='rg'\n                      label='RG'\n                      value={formik.values.rg}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={formik.touched.rg && Boolean(formik.errors.rg)}\n                      helperText={formik.touched.rg && formik.errors.rg}\n                      inputProps={{ maxLength: 10 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={3}>\n                    <TextField\n                      id='emissor'\n                      name='emissor'\n                      label='ORGÃO EMISSOR'\n                      value={formik.values.emissor}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.emissor && Boolean(formik.errors.emissor)\n                      }\n                      helperText={\n                        formik.touched.emissor && formik.errors.emissor\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={3}>\n                    <KeyboardDatePicker\n                      id='emissao'\n                      name='emissao'\n                      margin='normal'\n                      label='DATA EMISSAO'\n                      className={classes.fieldCentralization}\n                      format='dd/MM/yyyy'\n                      value={selectedDateEmissao}\n                      onChange={(date, value) => {\n                        handleDateChangeEmissao(date, value);\n                      }}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.emissao && Boolean(formik.errors.emissao)\n                      }\n                      helperText={\n                        formik.touched.emissao && formik.errors.emissao\n                      }\n                      inputProps={{ maxLength: 10 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={3}>\n                    <TextField\n                      id='sexo'\n                      name='sexo'\n                      select\n                      label='SEXO'\n                      value={formik.values.sexo}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={formik.touched.sexo && Boolean(formik.errors.sexo)}\n                      helperText={formik.touched.sexo && formik.errors.sexo}\n                      fullWidth\n                      required\n                    >\n                      <MenuItem key='M' value='M'>\n                        Masculino\n                      </MenuItem>\n                      <MenuItem key='F' value='F'>\n                        Feminino\n                      </MenuItem>\n                    </TextField>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={12}>\n                    <TextField\n                      id='mae'\n                      name='mae'\n                      label='NOME DA MÃE'\n                      value={formik.values.mae}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={formik.touched.mae && Boolean(formik.errors.mae)}\n                      helperText={formik.touched.mae && formik.errors.mae}\n                      inputProps={{ maxLength: 150 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={12}>\n                    <TextField\n                      id='pai'\n                      name='pai'\n                      label='NOME DO PAI'\n                      value={formik.values.pai}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={formik.touched.pai && Boolean(formik.errors.pai)}\n                      helperText={formik.touched.pai && formik.errors.pai}\n                      inputProps={{ maxLength: 150 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid\n                  container\n                  justify='flex-end'\n                  alignItems='center'\n                  spacing={3}\n                >\n                  <Grid item>\n                    <Button\n                      variant='contained'\n                      color='secondary'\n                      size='sm'\n                      rel='noopener noreferrer'\n                      onClick={() => previousStep()}\n                    >\n                      <ArrowBack className={classes.arrowIconBack} />\n                      Anterior\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      size='sm'\n                      id='BTNSECONDNEXT'\n                      rel='noopener noreferrer'\n                      onClick={() => nextStep()}\n                    >\n                      Próximo\n                      <ArrowForward className={classes.arrowIconNext} />\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Grid>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { Button, Grid, Hidden, Typography, TextField } from \"@material-ui/core\";\nimport { ArrowForward, ArrowBack } from \"@material-ui/icons\";\nimport manPc from \"../../../../assets/images/register.png\";\nimport { useStyles } from \"../../styles\";\nimport { maskNumber } from \"../../../../utils/string/masks\";\nimport { getCep } from \"../../../../services/api/api\";\n\nexport const SlideFour = ({ nextStep, previousStep, formik, waitCep }) => {\n  const classes = useStyles();\n\n  const handleCep = (event) => {\n    let value = event.target.value;\n    value = value.replace(/\\D/g, \"\");\n    if (value.length >= 8) {\n      getCep(event.target.value).then((cep) => {\n        waitCep(true);\n        setTimeout(() => {\n          if (!!cep) {\n            waitCep(false);\n            formik.setFieldValue(\"endereco\", cep.logradouro);\n            formik.setFieldValue(\"bairro\", cep.bairro);\n            formik.setFieldValue(\"cidade\", cep.localidade);\n            formik.setFieldValue(\"estado\", cep.uf);\n          }\n        }, 1500);\n      });\n    } else {\n      waitCep(false);\n      formik.setFieldValue(\"endereco\", \"\");\n      formik.setFieldValue(\"bairro\", \"\");\n      formik.setFieldValue(\"cidade\", \"\");\n      formik.setFieldValue(\"estado\", \"\");\n    }\n    formik.handleChange(event);\n  };\n\n  useEffect(() => {\n    return () => {};\n  });\n\n  return (\n    <Grid item xs={12} md={12} lg={12}>\n      <div className={classes.divCentralization}>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Hidden only={[\"xs\", \"sm\"]}>\n            <Grid item md={6}>\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <img src={manPc} className={classes.manPc} alt=\"logotipo\" />\n              </Grid>\n            </Grid>\n          </Hidden>\n          <Grid item md={6}>\n            <Grid container direction=\"column\" spacing={6}>\n              <Grid item>\n                <Typography\n                  variant=\"body1\"\n                  gutterBottom\n                  className={classes.label}\n                >\n                  Informe os dados de{\" \"}\n                  <span className={classes.labelUser}>\n                    Endereço do Representante Legal\n                  </span>\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      id=\"cep\"\n                      name=\"cep\"\n                      label=\"CEP\"\n                      value={formik.values.cep}\n                      onChange={(e) => handleCep(e)}\n                      onBlur={formik.handleBlur}\n                      error={formik.touched.cep && Boolean(formik.errors.cep)}\n                      helperText={formik.touched.cep && formik.errors.cep}\n                      inputProps={{\n                        maxLength: 8,\n                        autoComplete: \"off\",\n                      }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={7} lg={6}>\n                    <TextField\n                      id=\"endereco\"\n                      name=\"endereco\"\n                      label=\"ENDEREÇO\"\n                      value={formik.values.endereco}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.endereco &&\n                        Boolean(formik.errors.endereco)\n                      }\n                      helperText={\n                        formik.touched.endereco && formik.errors.endereco\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={2} lg={3}>\n                    <TextField\n                      id=\"numero\"\n                      name=\"numero\"\n                      label=\"NÚMERO\"\n                      value={formik.values.numero}\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          maskNumber(e.target.value)\n                        )\n                      }\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.numero && Boolean(formik.errors.numero)\n                      }\n                      helperText={formik.touched.numero && formik.errors.numero}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item md={6} lg={6}>\n                    <TextField\n                      id=\"bairro\"\n                      name=\"bairro\"\n                      label=\"BAIRRO\"\n                      value={formik.values.bairro}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.bairro && Boolean(formik.errors.bairro)\n                      }\n                      helperText={formik.touched.bairro && formik.errors.bairro}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={6} lg={6}>\n                    <TextField\n                      id=\"complemento\"\n                      name=\"complemento\"\n                      label=\"COMPLEMENTO\"\n                      value={formik.values.complemento}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.complemento &&\n                        Boolean(formik.errors.complemento)\n                      }\n                      helperText={\n                        formik.touched.complemento && formik.errors.complemento\n                      }\n                      fullWidth\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item lg={6}>\n                    <TextField\n                      id=\"cidade\"\n                      name=\"cidade\"\n                      label=\"CIDADE\"\n                      value={formik.values.cidade}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.cidade && Boolean(formik.errors.cidade)\n                      }\n                      helperText={formik.touched.cidade && formik.errors.cidade}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item lg={6}>\n                    <TextField\n                      id=\"estado\"\n                      name=\"estado\"\n                      label=\"ESTADO\"\n                      value={formik.values.estado}\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          e.target.value.replace(/[^a-zA-ZçÇ]/g, \"\")\n                        )\n                      }\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.estado && Boolean(formik.errors.estado)\n                      }\n                      helperText={formik.touched.estado && formik.errors.estado}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid\n                  container\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                  spacing={3}\n                >\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      size=\"sm\"\n                      rel=\"noopener noreferrer\"\n                      onClick={() => previousStep()}\n                    >\n                      <ArrowBack className={classes.arrowIconBack} />\n                      Anterior\n                    </Button>\n                  </Grid>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"sm\"\n                    id=\"BTNTHIRDNEXT\"\n                    rel=\"noopener noreferrer\"\n                    onClick={() => nextStep()}\n                  >\n                    Próximo\n                    <ArrowForward className={classes.arrowIconNext} />\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Grid>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { Button, Grid, Hidden, Typography, TextField } from \"@material-ui/core\";\nimport { ArrowForward, ArrowBack } from \"@material-ui/icons\";\nimport manPc from \"../../../../assets/images/register.png\";\nimport { useStyles } from \"../../styles\";\nimport {\n  maskTellPhone,\n  maskNumber,\n  maskCnpj,\n} from \"../../../../utils/string/masks\";\nimport { getCnpj } from \"../../../../services/api/api\";\n\nexport const SlideFive = ({ nextStep, previousStep, formik, waitCnpj }) => {\n  const classes = useStyles();\n\n  const handleCNPJ = (event) => {\n    let value = event.target.value;\n    value = value.replace(/\\D/g, \"\");\n    if (value.length >= 14) {\n      console.log(value);\n      waitCnpj(true);\n      getCnpj(value).then((cnpj) => {\n        if (!!cnpj) {\n          waitCnpj(false);\n          formik.setFieldValue(\"razaosocial\", cnpj.name);\n          formik.setFieldValue(\"nome_fantasia\", cnpj.alias);\n          formik.setFieldValue(\"telefone\", maskTellPhone(cnpj.phone.phone_1));\n          formik.setFieldValue(\"cnae\", cnpj.legal_nature.code);\n          formik.setFieldValue(\"ceppj\", cnpj.address.zip_code);\n          formik.setFieldValue(\"enderecopj\", cnpj.address.street);\n          formik.setFieldValue(\"bairropj\", cnpj.address.neighborhood);\n          formik.setFieldValue(\"cidadepj\", cnpj.address.city);\n          formik.setFieldValue(\"estadopj\", cnpj.address.state);\n          formik.setFieldValue(\"numeropj\", cnpj.address.number);\n        } else {\n          waitCnpj(false);\n          formik.setFieldValue(\"razaosocial\", \"\");\n          formik.setFieldValue(\"site\", \"\");\n          formik.setFieldValue(\"nome_fantasia\", \"\");\n          formik.setFieldValue(\"cidadepj\", \"\");\n          formik.setFieldValue(\"enderecopj\", \"\");\n          formik.setFieldValue(\"estadopj\", \"\");\n          formik.setFieldValue(\"numeropj\", \"\");\n          formik.setFieldValue(\"bairropj\", \"\");\n          formik.setFieldValue(\"telefone\", \"\");\n          formik.setFieldValue(\"ceppj\", \"\");\n          formik.setFieldValue(\"cnae\", \"\");\n        }\n      });\n    } else if (value.length === 0) {\n      formik.setFieldValue(\"razaosocial\", \"\");\n      formik.setFieldValue(\"site\", \"\");\n      formik.setFieldValue(\"nome_fantasia\", \"\");\n      formik.setFieldValue(\"cidadepj\", \"\");\n      formik.setFieldValue(\"enderecopj\", \"\");\n      formik.setFieldValue(\"estadopj\", \"\");\n      formik.setFieldValue(\"numeropj\", \"\");\n      formik.setFieldValue(\"bairropj\", \"\");\n      formik.setFieldValue(\"telefone\", \"\");\n      formik.setFieldValue(\"ceppj\", \"\");\n      formik.setFieldValue(\"cnae\", \"\");\n    }\n\n    formik.setFieldValue(\"cnpj\", maskCnpj(event.target.value));\n  };\n\n  useEffect(() => {\n    return () => {};\n  });\n  return (\n    <Grid item md={12} lg={12}>\n      <div style={{ padding: 20 }}>\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n          <Hidden only={[\"xs\", \"sm\"]}>\n            <Grid item md={5}>\n              <Grid container justify=\"center\">\n                <img src={manPc} className={classes.manPc} alt=\"logotipo\" />\n              </Grid>\n            </Grid>\n          </Hidden>\n          <Grid item md={7}>\n            <Grid container direction=\"column\" spacing={4}>\n              <Grid item>\n                <Typography\n                  variant=\"body1\"\n                  gutterBottom\n                  className={classes.label}\n                >\n                  Informe os dados da{\" \"}\n                  <span className={classes.labelUser}>Sua Empresa</span>\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item md={4} lg={4}>\n                    <TextField\n                      id=\"cnpj\"\n                      name=\"cnpj\"\n                      label=\"CNPJ\"\n                      value={formik.values.cnpj}\n                      onChange={(e) => {\n                        handleCNPJ(e);\n                      }}\n                      onBlur={formik.handleBlur}\n                      error={formik.touched.cnpj && Boolean(formik.errors.cnpj)}\n                      helperText={formik.touched.cnpj && formik.errors.cnpj}\n                      inputProps={{ maxLength: 18 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={4} lg={3}>\n                    <TextField\n                      id=\"telefone\"\n                      name=\"telefone\"\n                      label=\"TELEFONE\"\n                      value={formik.values.telefone}\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          maskTellPhone(e.target.value)\n                        )\n                      }\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.telefone &&\n                        Boolean(formik.errors.telefone)\n                      }\n                      helperText={\n                        formik.touched.telefone && formik.errors.telefone\n                      }\n                      inputProps={{ maxLength: 14 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={4} lg={5}>\n                    <TextField\n                      id=\"site\"\n                      name=\"site\"\n                      label=\"SITE\"\n                      value={formik.values.site}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={formik.touched.site && Boolean(formik.errors.site)}\n                      helperText={formik.touched.site && formik.errors.site}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item md={4} lg={5}>\n                    <TextField\n                      id=\"razaosocial\"\n                      name=\"razaosocial\"\n                      label=\"RAZÃO SOCIAL\"\n                      value={formik.values.razaosocial}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.razaosocial &&\n                        Boolean(formik.errors.razaosocial)\n                      }\n                      helperText={\n                        formik.touched.razaosocial && formik.errors.razaosocial\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={4} lg={3}>\n                    <TextField\n                      id=\"cnae\"\n                      name=\"cnae\"\n                      label=\"CNAE\"\n                      value={formik.values.cnae}\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          maskNumber(e.target.value)\n                        )\n                      }\n                      onBlur={formik.handleBlur}\n                      error={formik.touched.cnae && Boolean(formik.errors.cnae)}\n                      helperText={formik.touched.cnae && formik.errors.cnae}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={4} lg={4}>\n                    <TextField\n                      id=\"nome_fantasia\"\n                      name=\"nome_fantasia\"\n                      label=\"NOME FANTASIA\"\n                      value={formik.values.nome_fantasia}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.nome_fantasia &&\n                        Boolean(formik.errors.nome_fantasia)\n                      }\n                      helperText={\n                        formik.touched.nome_fantasia &&\n                        formik.errors.nome_fantasia\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item md={3} lg={3}>\n                    <TextField\n                      id=\"ceppj\"\n                      name=\"ceppj\"\n                      label=\"CEP\"\n                      value={formik.values.ceppj}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.ceppj && Boolean(formik.errors.ceppj)\n                      }\n                      helperText={formik.touched.ceppj && formik.errors.ceppj}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={6} lg={6}>\n                    <TextField\n                      id=\"enderecopj\"\n                      name=\"enderecopj\"\n                      label=\"ENDEREÇO\"\n                      value={formik.values.enderecopj}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.enderecopj &&\n                        Boolean(formik.errors.enderecopj)\n                      }\n                      helperText={\n                        formik.touched.enderecopj && formik.errors.enderecopj\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={3} lg={3}>\n                    <TextField\n                      id=\"numeropj\"\n                      name=\"numeropj\"\n                      label=\"NUMERO\"\n                      value={formik.values.numeropj}\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          maskNumber(e.target.value)\n                        )\n                      }\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.numeropj &&\n                        Boolean(formik.errors.numeropj)\n                      }\n                      helperText={\n                        formik.touched.numeropj && formik.errors.numeropj\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item md={6} lg={3}>\n                    <TextField\n                      id=\"bairropj\"\n                      name=\"bairropj\"\n                      label=\"BAIRRO\"\n                      value={formik.values.bairropj}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.bairropj &&\n                        Boolean(formik.errors.bairropj)\n                      }\n                      helperText={\n                        formik.touched.bairropj && formik.errors.bairropj\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={6} lg={3}>\n                    <TextField\n                      id=\"complementopj\"\n                      name=\"complementopj\"\n                      label=\"COMPLEMENTO\"\n                      value={formik.values.complementopj}\n                      onChange={formik.handleChange}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item lg={3}>\n                    <TextField\n                      id=\"cidadepj\"\n                      name=\"cidadepj\"\n                      label=\"CIDADE\"\n                      value={formik.values.cidadepj}\n                      onChange={formik.handleChange}\n                      fullWidth\n                      required\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.cidadepj &&\n                        Boolean(formik.errors.cidadepj)\n                      }\n                      helperText={\n                        formik.touched.cidadepj && formik.errors.cidadepj\n                      }\n                    />\n                  </Grid>\n                  <Grid item lg={3}>\n                    <TextField\n                      id=\"estadopj\"\n                      name=\"estadopj\"\n                      label=\"ESTADO\"\n                      value={formik.values.estadopj}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.estadopj &&\n                        Boolean(formik.errors.estadopj)\n                      }\n                      helperText={\n                        formik.touched.estadopj && formik.errors.estadopj\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item md={12} style={{ marginTop: \"10px\" }}>\n            <Grid container justify=\"flex-end\" alignItems=\"center\" spacing={3}>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"sm\"\n                  rel=\"noopener noreferrer\"\n                  onClick={() => previousStep()}\n                >\n                  <ArrowBack className={classes.arrowIconBack} />\n                  Anterior\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"sm\"\n                  id=\"BTNFOURTHNEXT\"\n                  rel=\"noopener noreferrer\"\n                  onClick={() => nextStep()}\n                >\n                  Próximo\n                  <ArrowForward className={classes.arrowIconBack} />\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Grid>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Hidden,\n  Typography,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport { ArrowBack, Save } from \"@material-ui/icons\";\nimport manPc from \"../../../../assets/images/register.png\";\nimport { useStyles } from \"../../styles\";\n\nconst bancos = [\n  {\n    numeroBanco: 104,\n    nomeBanco: \"Caixa Econômica Federal (104)\",\n  },\n  {\n    numeroBanco: 237,\n    nomeBanco: \"Banco Bradesco S.A (237)\",\n  },\n  {\n    numeroBanco: 33,\n    nomeBanco: \"Banco Santander (Brasil) S.A. (033)\",\n  },\n  {\n    numeroBanco: 341,\n    nomeBanco: \"Banco Itaú S.A. (341)\",\n  },\n  {\n    numeroBanco: 1,\n    nomeBanco: \"Banco do Brasil S.A. (001)\",\n  },\n  {\n    numeroBanco: 197,\n    nomeBanco: \"Stone (197)\",\n  },\n  {\n    numeroBanco: 77,\n    nomeBanco: \"Banco Inter (077)\",\n  },\n  {\n    numeroBanco: 748,\n    nomeBanco: \"Sicred (748)\",\n  },\n  {\n    numeroBanco: 136,\n    nomeBanco: \"Banco UNICRED (136)\",\n  },\n  {\n    numeroBanco: 756,\n    nomeBanco: \"Banco Cooperativo do Brasil S.A. – BANCOOB (756)\",\n  },\n  {\n    numeroBanco: 260,\n    nomeBanco: \"Nubank (260)\",\n  },\n  {\n    numeroBanco: 41,\n    nomeBanco: \"Banco do Estado do Rio Grande do Sul S.A. (041)\",\n  },\n  {\n    numeroBanco: 356,\n    nomeBanco: \"Banco Real S.A. (antigo) (356)\",\n  },\n  {\n    numeroBanco: 399,\n    nomeBanco: \"HSBC Bank Brasil S.A. – Banco Múltiplo (399)\",\n  },\n  {\n    numeroBanco: 422,\n    nomeBanco: \"Banco Safra S.A. (422)\",\n  },\n  {\n    numeroBanco: 453,\n    nomeBanco: \"Banco Rural S.A. (453)\",\n  },\n  {\n    numeroBanco: 633,\n    nomeBanco: \"Banco Rendimento S.A. (633)\",\n  },\n  {\n    numeroBanco: 652,\n    nomeBanco: \"Itaú Unibanco Holding S.A. (652)\",\n  },\n  {\n    numeroBanco: 745,\n    nomeBanco: \"Banco Citibank S.A. (745)\",\n  },\n  {\n    numeroBanco: 246,\n    nomeBanco: \"Banco ABC Brasil S.A. (246)\",\n  },\n  {\n    numeroBanco: 25,\n    nomeBanco: \"Banco Alfa S.A (025)\",\n  },\n  {\n    numeroBanco: 641,\n    nomeBanco: \"Banco Alvorada S.A. (641))\",\n  },\n  {\n    numeroBanco: 29,\n    nomeBanco: \"Banco Banerj S.A. (029)\",\n  },\n  {\n    numeroBanco: 38,\n    nomeBanco: \"Banco Banestado S.A. (038)\",\n  },\n  {\n    numeroBanco: 0,\n    nomeBanco: \"Banco Bankpar S.A. (000)\",\n  },\n  {\n    numeroBanco: 740,\n    nomeBanco: \"Banco Barclays S.A (740)\",\n  },\n  {\n    numeroBanco: 107,\n    nomeBanco: \"Banco BBM S.A. (107)\",\n  },\n  {\n    numeroBanco: 31,\n    nomeBanco: \"Banco Beg S.A (031)\",\n  },\n  {\n    numeroBanco: 96,\n    nomeBanco: \"Banco BM&F de Serviços de Liquidação e Custódia S.A (096)\",\n  },\n  {\n    numeroBanco: 318,\n    nomeBanco: \"Banco BMG S.A. (318)\",\n  },\n  {\n    numeroBanco: 752,\n    nomeBanco: \"Banco BNP Paribas Brasil S.A. (752)\",\n  },\n  {\n    numeroBanco: 248,\n    nomeBanco: \"Banco Boavista Interatlântico S.A. (248)\",\n  },\n];\n\nexport const SlideSix = ({ nextStep, previousStep, submitForm, formik }) => {\n  const classes = useStyles();\n  const [isCaixa, setIsCaixa] = useState(\"hidden\");\n\n  const handleBank = (event) => {\n    if (event.target.value === 104) {\n      setIsCaixa(\"visible\");\n    } else {\n      setIsCaixa(\"hidden\");\n    }\n    formik.handleChange(event);\n  };\n\n  useEffect(() => {\n    return () => {};\n  });\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Hidden only={[\"xs\", \"sm\"]}>\n        <Grid item md={6}>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <img src={manPc} className={classes.manPc} alt=\"logotipo\" />\n          </Grid>\n        </Grid>\n      </Hidden>\n      <Grid item xs={12} md={6}>\n        <Grid container direction=\"column\" spacing={7}>\n          <Grid item xs={11}>\n            <Typography variant=\"body1\" gutterBottom className={classes.label}>\n              Ainda sobre o seu negócio, quais os{\" \"}\n              <span className={classes.labelUser}>\n                dados bancários da sua empresa?\n              </span>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Grid container spacing={3}>\n              <Grid item xs={10} sm={6} md={6} lg={6} xl={6}>\n                <TextField\n                  id=\"bancopj\"\n                  name=\"bancopj\"\n                  select\n                  label=\"BANCO\"\n                  value={formik.values.bancopj}\n                  onChange={handleBank}\n                  onBlur={formik.handleBlur}\n                  error={\n                    formik.touched.bancopj && Boolean(formik.errors.bancopj)\n                  }\n                  helperText={formik.touched.bancopj && formik.errors.bancopj}\n                  fullWidth\n                  required\n                >\n                  {bancos.map(({ nomeBanco, numeroBanco }) => {\n                    return (\n                      <MenuItem key={numeroBanco} value={numeroBanco}>\n                        {nomeBanco}\n                      </MenuItem>\n                    );\n                  })}\n                </TextField>\n              </Grid>\n              <Grid item xs={10} sm={6} md={6} lg={6} xl={6}>\n                <TextField\n                  id=\"agenciapj\"\n                  name=\"agenciapj\"\n                  label=\"AGÊNCIA\"\n                  value={formik.values.agenciapj}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  error={\n                    formik.touched.agenciapj && Boolean(formik.errors.agenciapj)\n                  }\n                  helperText={\n                    formik.touched.agenciapj && formik.errors.agenciapj\n                  }\n                  inputProps={{\n                    maxLength: 4,\n                  }}\n                  fullWidth\n                  required\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container spacing={3}>\n              <Grid item xs={10} sm={6} md={6} lg={6} xl={6}>\n                <TextField\n                  id=\"contapj\"\n                  name=\"contapj\"\n                  label=\"CONTA\"\n                  value={formik.values.contapj}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  error={\n                    formik.touched.contapj && Boolean(formik.errors.contapj)\n                  }\n                  helperText={formik.touched.contapj && formik.errors.contapj}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={10} sm={6} md={6} lg={6} xl={6}>\n                <Box visibility={isCaixa}>\n                  <TextField\n                    id=\"operacaopj\"\n                    name=\"operacaopj\"\n                    label=\"OPERAÇÃO\"\n                    value={formik.values.operacaopj}\n                    onChange={formik.handleChange}\n                    fullWidth\n                    helperText=\"*Caso tenha conta na Caixa\"\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container>\n              <Grid item xs={10} sm={12} md={12} lg={12} xl={12}>\n                <TextField\n                  id=\"pixpj\"\n                  name=\"pixpj\"\n                  label=\"CHAVE PIX\"\n                  value={formik.values.pixpj}\n                  onChange={formik.handleChange}\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={11} md={12}>\n            <Grid container justify=\"flex-end\" alignItems=\"center\" spacing={3}>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"sm\"\n                  rel=\"noopener noreferrer\"\n                  onClick={() => previousStep()}\n                >\n                  <ArrowBack className={classes.arrowIconBack} />\n                  Anterior\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  id=\"BTNFIFTHNEXT\"\n                  size=\"sm\"\n                  rel=\"noopener noreferrer\"\n                  type=\"submit\"\n                >\n                  Salvar\n                  <Save className={classes.saveIcon} />\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Grid,\n  Hidden,\n  Typography,\n  TextField,\n  MenuItem,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ArrowForward, ArrowBack } from '@material-ui/icons';\nimport manPc from '../../../../assets/images/register.png';\nimport { useStyles } from '../../styles';\nimport {\n  maskCpf,\n  maskDate,\n  formatDate,\n  maskCel,\n} from '../../../../utils/string/masks';\nimport { getCountries } from '../../../../services/api/api';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n\nexport const SlideSeven = ({ nextStep, previousStep, formik }) => {\n  const classes = useStyles();\n  const [countries, setCountries] = useState([]);\n  const [selectedDateNasc, setSelectedDateNac] = React.useState(\n    new Date('01/01/1980')\n  );\n  const [selectedDateEmissao, setSelectedDateEmissao] = React.useState(\n    new Date('01/01/2010')\n  );\n  useEffect(() => {\n    const countriesNames = async () => {\n      setCountries(await getCountries());\n    };\n\n    countriesNames();\n  }, []);\n\n  useEffect(() => {\n    return () => {};\n  });\n\n  const handleNationality = (event, value) => {\n    formik.setFieldValue('nacionalidadePf', value);\n  };\n  const handleDateChangeNasci = (date, value) => {\n    const newDate = formatDate(date);\n    setSelectedDateNac(date);\n    formik.setFieldValue('nascimentoPf', newDate);\n  };\n\n  const handleDateChangeEmissao = (date, value) => {\n    const newDate = formatDate(date);\n    setSelectedDateEmissao(date);\n    formik.setFieldValue('emissaoPf', newDate);\n  };\n  return (\n    <Grid item xs={12} md={12}>\n      <div className={classes.divCentralization}>\n        <Grid container justify='center' alignItems='center'>\n          <Hidden only={['xs', 'sm']}>\n            <Grid item md={4}>\n              <Grid container justify='center' alignItems='center'>\n                <img src={manPc} className={classes.manPc} alt='logotipo' />\n              </Grid>\n            </Grid>\n          </Hidden>\n          <Grid item md={8}>\n            <Grid container direction='column' spacing={3}>\n              <Grid item>\n                <Grid container>\n                  <Grid item>\n                    <Typography\n                      variant='body1'\n                      gutterBottom\n                      className={classes.label}\n                    >\n                      Informe os dados de{' '}\n                      <span className={classes.labelUser}>Pessoa Física</span>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      id='cpfPf'\n                      name='cpfPf'\n                      label='CPF'\n                      value={formik.values.cpfPf}\n                      onChange={(e) => {\n                        formik.setFieldValue(\n                          e.target.id,\n                          maskCpf(e.target.value)\n                        );\n                      }}\n                      inputProps={{ maxLength: 14 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      id='celularPf'\n                      name='celularPf'\n                      label='CELULAR'\n                      value={formik.values.celularPf}\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          maskCel(e.target.value)\n                        )\n                      }\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.celularPf &&\n                        Boolean(formik.errors.celularPf)\n                      }\n                      helperText={\n                        formik.touched.celularPf && formik.errors.celularPf\n                      }\n                      inputProps={{ maxLength: 15 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <KeyboardDatePicker\n                      id='nascimentoPf'\n                      name='nascimentoPf'\n                      margin='normal'\n                      label='NASCIMENTO'\n                      className={classes.fieldCentralization}\n                      format='dd/MM/yyyy'\n                      value={selectedDateNasc}\n                      onChange={(date, value) => {\n                        handleDateChangeNasci(date, value);\n                      }}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.nascimentoPf &&\n                        Boolean(formik.errors.nascimentoPf)\n                      }\n                      helperText={\n                        formik.touched.nascimentoPf &&\n                        formik.errors.nascimentoPf\n                      }\n                      inputProps={{ maxLength: 10 }}\n                      fullWidth\n                      required\n                    />\n                    {/* <TextField\n                      id=\"nascimentoPf\"\n                      name=\"nascimentoPf\"\n                      label=\"NASCIMENTO\"\n                      value={formik.values.nascimentoPf}\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          maskDate(e.target.value)\n                        )\n                      }\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.nascimentoPf &&\n                        Boolean(formik.errors.nascimentoPf)\n                      }\n                      helperText={\n                        formik.touched.nascimentoPf &&\n                        formik.errors.nascimentoPf\n                      }\n                      inputProps={{ maxLength: 10 }}\n                      fullWidth\n                      required\n                    /> */}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      id='naturalidadePf'\n                      name='naturalidadePf'\n                      label='NATURALIDADE'\n                      value={formik.values.naturalidadePf}\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          e.target.value.replace(/[^a-zA-ZçÇ ]/g, '')\n                        )\n                      }\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.naturalidadePf &&\n                        Boolean(formik.errors.naturalidadePf)\n                      }\n                      helperText={\n                        formik.touched.naturalidadePf &&\n                        formik.errors.naturalidadePf\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <Autocomplete\n                      options={countries}\n                      getOptionLabel={(option) => option}\n                      id='nacionalidadePf'\n                      disableCloseOnSelect\n                      noOptionsText={'País não encontrado'}\n                      value={formik.values.nacionalidadePf}\n                      onChange={handleNationality}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          className={classes.fieldCentralization}\n                          label='NACIONALIDADE'\n                          name='nacionalidadePf'\n                          margin='normal'\n                          onBlur={formik.handleBlur}\n                          error={\n                            formik.touched.nacionalidadePf &&\n                            Boolean(formik.errors.nacionalidadePf)\n                          }\n                          helperText={\n                            formik.touched.nacionalidadePf &&\n                            formik.errors.nacionalidadePf\n                          }\n                          fullWidth\n                          required\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      id='estadoCivilPf'\n                      name='estadoCivilPf'\n                      select\n                      label='ESTADO CIVIL'\n                      value={formik.values.estadoCivilPf}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.estadoCivilPf &&\n                        Boolean(formik.errors.estadoCivilPf)\n                      }\n                      helperText={\n                        formik.touched.estadoCivilPf &&\n                        formik.errors.estadoCivilPf\n                      }\n                      fullWidth\n                      required\n                    >\n                      <MenuItem key='sl' value='Solteiro'>\n                        Solteiro\n                      </MenuItem>\n                      <MenuItem key='cs' value='Casado'>\n                        Casado\n                      </MenuItem>\n                      <MenuItem key='sp' value='Separado'>\n                        Separado\n                      </MenuItem>\n                      <MenuItem key='vi' value='Viuvo'>\n                        Viúvo\n                      </MenuItem>\n                      <MenuItem key='dv' value='Divorciado'>\n                        Divorciado\n                      </MenuItem>\n                    </TextField>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={3}>\n                    <TextField\n                      id='rgPf'\n                      name='rgPf'\n                      label='RG'\n                      value={formik.values.rgPf}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={formik.touched.rgPf && Boolean(formik.errors.rgPf)}\n                      helperText={formik.touched.rgPf && formik.errors.rgPf}\n                      inputProps={{ maxLength: 10 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      id='emissorPf'\n                      name='emissorPf'\n                      label='ORGÃO EMISSOR'\n                      value={formik.values.emissorPf}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.emissaoPf &&\n                        Boolean(formik.errors.emissaoPf)\n                      }\n                      helperText={\n                        formik.touched.emissaoPf && formik.errors.emissaoPf\n                      }\n                      required\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={3}>\n                    <KeyboardDatePicker\n                      id='emissaoPf'\n                      name='emissaoPf'\n                      margin='normal'\n                      label='DATA EMISSAO'\n                      className={classes.fieldCentralization}\n                      format='dd/MM/yyyy'\n                      value={selectedDateEmissao}\n                      onChange={(date, value) => {\n                        handleDateChangeEmissao(date, value);\n                      }}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.emissaoPf &&\n                        Boolean(formik.errors.emissaoPf)\n                      }\n                      helperText={\n                        formik.touched.emissaoPf && formik.errors.emissaoPf\n                      }\n                      inputProps={{ maxLength: 10 }}\n                      fullWidth\n                      required\n                    />\n                    {/* <TextField\n                      id='emissaoPf'\n                      name='emissaoPf'\n                      label='DATA EMISSAO'\n                      value={formik.values.emissaoPf}\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          maskDate(e.target.value)\n                        )\n                      }\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.emissaoPf &&\n                        Boolean(formik.errors.emissaoPf)\n                      }\n                      helperText={\n                        formik.touched.emissaoPf && formik.errors.emissaoPf\n                      }\n                      inputProps={{ maxLength: 10 }}\n                      fullWidth\n                      required\n                    /> */}\n                  </Grid>\n                  <Grid item xs={12} md={2}>\n                    <TextField\n                      id='sexoPf'\n                      name='sexoPf'\n                      select\n                      label='SEXO'\n                      fullWidth\n                      value={formik.values.sexoPf}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.sexoPf && Boolean(formik.errors.sexoPf)\n                      }\n                      helperText={formik.touched.sexoPf && formik.errors.sexoPf}\n                      required\n                    >\n                      <MenuItem key='M' value='M'>\n                        Masculino\n                      </MenuItem>\n                      <MenuItem key='F' value='F'>\n                        Feminino\n                      </MenuItem>\n                    </TextField>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n                    <TextField\n                      id='maePf'\n                      name='maePf'\n                      label='NOME DA MÃE'\n                      value={formik.values.maePf}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.maePf && Boolean(formik.errors.maePf)\n                      }\n                      helperText={formik.touched.maePf && formik.errors.maePf}\n                      inputProps={{ maxLength: 150 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n                    <TextField\n                      id='paiPf'\n                      name='paiPf'\n                      label='NOME DO PAI'\n                      value={formik.values.paiPf}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.paiPf && Boolean(formik.errors.paiPf)\n                      }\n                      helperText={formik.touched.paiPf && formik.errors.paiPf}\n                      inputProps={{ maxLength: 150 }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                    <TextField\n                      id='sitePf'\n                      name='sitePf'\n                      label='SITE DE VENDAS'\n                      value={formik.values.sitePf}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.sitePf && Boolean(formik.errors.sitePf)\n                      }\n                      helperText={formik.touched.sitePf && formik.errors.sitePf}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid\n                  container\n                  justify='flex-end'\n                  alignItems='center'\n                  spacing={3}\n                >\n                  <Grid item>\n                    <Button\n                      variant='contained'\n                      color='secondary'\n                      size='sm'\n                      rel='noopener noreferrer'\n                      onClick={() => previousStep()}\n                    >\n                      <ArrowBack className={classes.arrowIconBack} />\n                      Anterior\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      size='sm'\n                      id='BTNSECONDNEXTPF'\n                      rel='noopener noreferrer'\n                      onClick={() => nextStep()}\n                    >\n                      Próximo\n                      <ArrowForward className={classes.arrowIconNext} />\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Grid>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { Button, Grid, Hidden, Typography, TextField } from \"@material-ui/core\";\nimport { ArrowForward, ArrowBack } from \"@material-ui/icons\";\nimport manPc from \"../../../../assets/images/register.png\";\nimport { useStyles } from \"../../styles\";\nimport { maskNumber } from \"../../../../utils/string/masks\";\nimport { getCep } from \"../../../../services/api/api\";\n\nexport const SlideEight = ({ nextStep, previousStep, formik, waitCep }) => {\n  const classes = useStyles();\n  useEffect(() => {\n    return () => {};\n  });\n  const handleCep = (event) => {\n    let value = event.target.value;\n    value = value.replace(/\\D/g, \"\");\n    if (value.length >= 8) {\n      getCep(event.target.value).then((cep) => {\n        waitCep(true);\n        setTimeout(() => {\n          if (!!cep) {\n            waitCep(false);\n            formik.setFieldValue(\"enderecoPf\", cep.logradouro);\n            formik.setFieldValue(\"bairroPf\", cep.bairro);\n            formik.setFieldValue(\"cidadePf\", cep.localidade);\n            formik.setFieldValue(\"estadoPf\", cep.uf);\n          }\n        }, 1500);\n      });\n    } else {\n      waitCep(false);\n      formik.setFieldValue(\"enderecoPf\", \"\");\n      formik.setFieldValue(\"bairroPf\", \"\");\n      formik.setFieldValue(\"cidadePf\", \"\");\n      formik.setFieldValue(\"estadoPf\", \"\");\n    }\n    formik.handleChange(event);\n  };\n\n  return (\n    <Grid item xs={12} md={12} lg={12}>\n      <div className={classes.divCentralization}>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Hidden only={[\"xs\", \"sm\"]}>\n            <Grid item md={6}>\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <img src={manPc} className={classes.manPc} alt=\"logotipo\" />\n              </Grid>\n            </Grid>\n          </Hidden>\n          <Grid item md={6}>\n            <Grid container direction=\"column\" spacing={6}>\n              <Grid item>\n                <Typography\n                  variant=\"body1\"\n                  gutterBottom\n                  className={classes.label}\n                >\n                  Informe os dados de{\" \"}\n                  <span className={classes.labelUser}>\n                    Endereço do Representante Legal\n                  </span>\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                      id=\"cepPf\"\n                      name=\"cepPf\"\n                      label=\"CEP\"\n                      value={formik.values.cepPf}\n                      onChange={(e) => handleCep(e)}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.cepPf && Boolean(formik.errors.cepPf)\n                      }\n                      helperText={formik.touched.cepPf && formik.errors.cepPf}\n                      inputProps={{\n                        maxLength: 8,\n                        autoComplete: \"off\",\n                      }}\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={7} lg={6}>\n                    <TextField\n                      id=\"enderecoPf\"\n                      name=\"enderecoPf\"\n                      label=\"ENDEREÇO\"\n                      value={formik.values.enderecoPf}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.enderecoPf &&\n                        Boolean(formik.errors.enderecoPf)\n                      }\n                      helperText={\n                        formik.touched.enderecoPf && formik.errors.enderecoPf\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={2} lg={3}>\n                    <TextField\n                      id=\"numeroPf\"\n                      name=\"numeroPf\"\n                      label=\"NÚMERO\"\n                      value={formik.values.numeroPf}\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          maskNumber(e.target.value)\n                        )\n                      }\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.numeroPf &&\n                        Boolean(formik.errors.numeroPf)\n                      }\n                      helperText={\n                        formik.touched.numeroPf && formik.errors.numeroPf\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item md={6} lg={6}>\n                    <TextField\n                      id=\"bairroPf\"\n                      name=\"bairroPf\"\n                      label=\"BAIRRO\"\n                      value={formik.values.bairroPf}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.bairroPf &&\n                        Boolean(formik.errors.bairroPf)\n                      }\n                      helperText={\n                        formik.touched.bairroPf && formik.errors.bairroPf\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item md={6} lg={6}>\n                    <TextField\n                      id=\"complementoPf\"\n                      name=\"complementoPf\"\n                      label=\"COMPLEMENTO\"\n                      value={formik.values.complementoPf}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.complementoPf &&\n                        Boolean(formik.errors.complementoPf)\n                      }\n                      helperText={\n                        formik.touched.complementoPf &&\n                        formik.errors.complementoPf\n                      }\n                      fullWidth\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={3}>\n                  <Grid item lg={6}>\n                    <TextField\n                      id=\"cidadePf\"\n                      name=\"cidadePf\"\n                      label=\"CIDADE\"\n                      value={formik.values.cidadePf}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.cidadePf &&\n                        Boolean(formik.errors.cidadePf)\n                      }\n                      helperText={\n                        formik.touched.cidadePf && formik.errors.cidadePf\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                  <Grid item lg={6}>\n                    <TextField\n                      id=\"estadoPf\"\n                      name=\"estadoPf\"\n                      label=\"ESTADO\"\n                      value={formik.values.estadoPf}\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          e.target.id,\n                          e.target.value.replace(/[^a-zA-ZçÇ]/g, \"\")\n                        )\n                      }\n                      onBlur={formik.handleBlur}\n                      error={\n                        formik.touched.estadoPf &&\n                        Boolean(formik.errors.estadoPf)\n                      }\n                      helperText={\n                        formik.touched.estadoPf && formik.errors.estadoPf\n                      }\n                      fullWidth\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid\n                  container\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                  spacing={3}\n                >\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      size=\"sm\"\n                      rel=\"noopener noreferrer\"\n                      onClick={() => previousStep()}\n                    >\n                      <ArrowBack className={classes.arrowIconBack} />\n                      Anterior\n                    </Button>\n                  </Grid>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"sm\"\n                    id=\"BTNTHIRDNEXTPF\"\n                    rel=\"noopener noreferrer\"\n                    onClick={() => nextStep()}\n                  >\n                    Próximo\n                    <ArrowForward className={classes.arrowIconNext} />\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Grid>\n  );\n};\n","/**\n * Validate CPF\n * @argument string\n * @returns boolean\n */\n\nexport const validateCpf = (strCPF) => {\n  var Soma;\n  var Resto;\n  var i;\n  Soma = 0;\n  strCPF = strCPF.replace(/\\D/g, \"\");\n  if (strCPF == \"00000000000\") return false;\n  for (i = 1; i <= 9; i++)\n    Soma = Soma + parseInt(strCPF.toString().substring(i - 1, i)) * (11 - i);\n  Resto = (Soma * 10) % 11;\n  if (Resto == 10 || Resto == 11) Resto = 0;\n  if (Resto != parseInt(strCPF.toString().substring(9, 10))) return false;\n  Soma = 0;\n  for (i = 1; i <= 10; i++)\n    Soma = Soma + parseInt(strCPF.toString().substring(i - 1, i)) * (12 - i);\n  Resto = (Soma * 10) % 11;\n  if (Resto == 10 || Resto == 11) Resto = 0;\n  if (Resto != parseInt(strCPF.toString().substring(10, 11))) return false;\n  return true;\n};\n\n// export const validateCpf = (cpf) => {\n//   cpf = cpf.replace(/[^\\d]+/g, \"\");\n//   if (cpf == \"\") return false;\n//   // Elimina CPFs invalidos conhecidos\n//   if (\n//     cpf.length != 11 ||\n//     cpf == \"00000000000\" ||\n//     cpf == \"11111111111\" ||\n//     cpf == \"22222222222\" ||\n//     cpf == \"33333333333\" ||\n//     cpf == \"44444444444\" ||\n//     cpf == \"55555555555\" ||\n//     cpf == \"66666666666\" ||\n//     cpf == \"77777777777\" ||\n//     cpf == \"88888888888\" ||\n//     cpf == \"99999999999\"\n//   )\n//     return false;\n//   // Valida 1o digito\n//   add = 0;\n//   for (i = 0; i < 9; i++) add += parseInt(cpf.charAt(i)) * (10 - i);\n//   rev = 11 - (add % 11);\n//   if (rev == 10 || rev == 11) rev = 0;\n//   if (rev != parseInt(cpf.charAt(9))) return false;\n//   // Valida 2o digito\n//   add = 0;\n//   for (i = 0; i < 10; i++) add += parseInt(cpf.charAt(i)) * (11 - i);\n//   rev = 11 - (add % 11);\n//   if (rev == 10 || rev == 11) rev = 0;\n//   if (rev != parseInt(cpf.charAt(10))) return false;\n//   return true;\n// };\n","import { api } from \"../../../services/api\";\n\nconst postCnpj = async (body) => {\n  const res = await api.post(`signup/cnpj`, body);\n  return res;\n};\n\nconst postPf = async (body) => {\n  const res = await api.post(`/signup/cpf`, body);\n  return res;\n};\n\nconst sendValidationStatus = async () => {\n  const res = await api.get(`/validation/status`);\n  api.defaults.headers.Authorization = `Bearer ${res.data.token}`;\n};\n\nexport { postCnpj, postPf, sendValidationStatus };\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { postCnpj, postPf } from \"./service\";\n\nexport const createCnpj = createAsyncThunk(\n  \"signup/createCnpj\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const { data } = await postCnpj(body);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const createPf = createAsyncThunk(\n  \"signup/createPf\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const { data } = await postPf(body);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  token: \"\",\n  signed: false,\n  status: \"idle\",\n  message: null,\n};\nconst signup = createSlice({\n  name: \"signup\",\n  initialState,\n  extraReducers: (builder) => {\n    builder\n      .addCase(createCnpj.pending, (state) => {\n        return (state = { ...state, status: \"loading\" });\n      })\n      .addCase(createCnpj.fulfilled, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"completed\",\n          token: action.payload.token,\n          signed: true,\n          message: action.payload.message,\n        });\n      })\n      .addCase(createCnpj.rejected, (state, action) => {\n        console.log(action);\n        return (state = {\n          ...state,\n          status: \"failed\",\n          message: action.payload.message,\n        });\n      })\n      .addCase(createPf.pending, (state) => {\n        return (state = { ...state, status: \"loading\" });\n      })\n      .addCase(createPf.fulfilled, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"completed\",\n          token: action.payload.token,\n          signed: true,\n          message: action.payload.message,\n        });\n      })\n      .addCase(createPf.rejected, (state, action) => {\n        console.log(action);\n        return (state = {\n          ...state,\n          status: \"failed\",\n          message: action.payload.message,\n        });\n      });\n    // .addCase(signin.pending, (state) => {\n    //   return (state = { ...state, status: \"loading\" });\n    // })\n    // .addCase(signin.fulfilled, (state, action) => {\n    //   return (state = {\n    //     ...state,\n    //     status: \"completed\",\n    //     token: action.payload.token,\n    //     signed: true,\n    //     message: action.payload.message,\n    //   });\n    // })\n    // .addCase(signin.rejected, (state, action) => {\n    //   return (state = {\n    //     ...state,\n    //     status: \"failed\",\n    //     message: action.payload.message,\n    //   });\n    // });\n  },\n});\n\n// export const { logOut, clearMessage } = signer.actions;\n// export const { increment, decrement } = systemUser.actions;\n\nexport default signup.reducer;\n","import '@fontsource/roboto';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { CustomTabs } from '../../components/CustomTabs';\nimport {\n  Backdrop,\n  CircularProgress,\n  Grid,\n  Card,\n  CardContent,\n  Container,\n  Tab,\n  Box,\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport TabPanel from './TabPanel';\nimport { useHistory } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { SlideOne } from './slides/SlideOne/index';\nimport { SlideTwo } from './slides/SlideTwo/index';\nimport { SlideThree } from './slides/SlideThree/index';\nimport { SlideFour } from './slides/SlideFour/index';\nimport { SlideFive } from './slides/SlideFive/index';\nimport { SlideSix } from './slides/SlideSix/index';\nimport { SlideSeven } from './slides/SlideSeven';\nimport { SlideEight } from './slides/SlideEight';\nimport PropTypes from 'prop-types';\nimport logo from '../../assets/images/logo_vileve_way.png';\nimport sha256 from 'crypto-js/sha256';\nimport { useStyles } from './styles';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './stylepagination.scss';\nimport { maskNumber } from '../../utils/string/masks';\nimport { validateCpf } from '../../utils/string/validateCpf';\nimport { createCnpj, createPf } from 'store/ducks/Signup';\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default function SectionCarousel() {\n  const { enqueueSnackbar } = useSnackbar();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const theme = useTheme();\n  const { message, status } = useSelector((state) => state.signup);\n  const dotActive = 'pagination__link';\n  const dotInactive = 'pagination__link is_active';\n  const [dot1, setDOT1] = useState(dotInactive);\n  const [dot2, setDOT2] = useState(dotInactive);\n  const [dot3, setDOT3] = useState(dotInactive);\n  const [dot4, setDOT4] = useState(dotInactive);\n  const [dot5, setDOT5] = useState(dotInactive);\n  const [dot6, setDOT6] = useState(dotInactive);\n  const [dot7, setDOT7] = useState(dotInactive);\n  const [open, setOpen] = useState(false);\n  const [isCnpj, setIsCnpj] = useState(false);\n  const [showDot, setShowDot] = useState(false);\n  const [value, setValue] = useState(0);\n\n  const elevation = 5;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const validationSchema = yup.object({\n    nome: yup\n      .string()\n      .required('Nome é obrigatório')\n      .matches(/^[aA-zZáàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ\\s]+$/, 'Somente letras')\n      .min(10, 'Nome completo deve conter no minimo 10 caractéries')\n      .max(40, 'Máximo de 40 caractéries')\n      .trim(),\n    email: yup\n      .string()\n      .trim()\n      .email('Não é um e-mail válido')\n      .required('Favor informar e-mail')\n      .trim(),\n    senha: yup\n      .string()\n      .required('Por favor, insira sua senha')\n      .matches(\n        /^(?=.*?[A-Z])(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W]){1,})(?!.*\\s).{8,}$/,\n        `A senha deve conter mínimo de oito caracteres, pelo menos, uma letra maiúscula, uma letra minúscula, números e um caractere especial`\n      )\n      .trim(),\n    senha2: yup\n      .string()\n      .oneOf([yup.ref('senha')], 'A senha não confere')\n      .required('Por favor, insira a senha')\n      .trim(),\n    cpf: yup.string().required('CPF é obrigatório').trim(),\n    celular: yup.string().required('O campo celular é obrigatório').trim(),\n    nascimento: yup\n      .string()\n      .required('Data de nascimento é obrigatória')\n      .trim(),\n    naturalidade: yup\n      .string()\n      .required('O campo naturalidade é obrigatório')\n      .trim(),\n    nacionalidade: yup.string().required('O campo nacionalidade é obrigatório'),\n    estado_civil: yup.string().required('O campo estado civil é obrigatório'),\n    rg: yup\n      .string()\n      .required('O campo RG é obrigatório')\n      .trim()\n      .min(5, 'Rg deve ter no minimo 5 caracteries'),\n    emissor: yup.string().required('O campo emissor é obrigatório').trim(),\n    emissao: yup.string().required('O campo emissao é obrigatório'),\n    sexo: yup.string().required('O campo sexo é obrigatório'),\n    mae: yup.string().required('Campo mãe é obrigatório').trim(),\n    pai: yup.string().required('Campo pai é obrigatório').trim(),\n    cep: yup.string().required('O campo CEP é obrigatório'),\n    endereco: yup.string().required('O campo endereço é obrigatório').trim(),\n    numero: yup.string().required('O campo número é obrigatório').trim(),\n    bairro: yup.string().required('O campo bairro é obrigatório').trim(),\n    cidade: yup.string().required('O campo cidade é obrigatório').trim(),\n    estado: yup.string().required('O campo estado é obrigatório').trim(),\n\n    cepPf: yup.string().required('O campo CEP é obrigatório'),\n    enderecoPf: yup.string().required('O campo endereço é obrigatório').trim(),\n    numeroPf: yup.string().required('O campo número é obrigatório').trim(),\n    bairroPf: yup.string().required('O campo bairro é obrigatório').trim(),\n    cidadePf: yup.string().required('O campo cidade é obrigatório').trim(),\n    estadoPf: yup.string().required('O campo estado é obrigatório').trim(),\n\n    cnpj: yup.string().required('Campo CNPJ é obrigatório'),\n    nome_fantasia: yup\n      .string()\n      .required('Campo nome fantasia é obrigatório')\n      .trim(),\n    telefone: yup.string().required('Campo telefone é obrigatório'),\n    razaosocial: yup\n      .string()\n      .required('Campo Razão Social é obrigatório')\n      .trim(),\n    cnae: yup.number().required('Campo CNAE é obrigatório'),\n    ceppj: yup.number().required('Campo CEP é obrigatório'),\n    enderecopj: yup.string().required('Campo Endereço é obrigatório').trim(),\n    numeropj: yup.number().required('Campo número é obrigatório'),\n    bairropj: yup.string().required('Campo Bairro é obrigatório').trim(),\n    cidadepj: yup.string().required('Campo cidade é obrigatório').trim(),\n    estadopj: yup.string().required('Campo estado é obrigatório').trim(),\n    bancopj: yup.string().required('Campo banco é obrigatório'),\n    agenciapj: yup\n      .number()\n      .typeError('Agencia deve ser número')\n      .required('Campo agência é obrigatório'),\n    contapj: yup.number().required('Campo conta é obrigatório'),\n    site: yup\n      .string()\n      .required('Campo Site é obrigatório')\n      .url(\"Insira um site valido ex: 'https://www.google.com'\"),\n    cpfPf: yup.string().required('CPF é obrigatório').trim(),\n    celularPf: yup.string().required('O campo celular é obrigatório').trim(),\n    nascimentoPf: yup\n      .string()\n      .required('Data de nascimento é obrigatória')\n      .trim(),\n    naturalidadePf: yup\n      .string()\n      .required('O campo naturalidade é obrigatório')\n      .trim(),\n    nacionalidadePf: yup\n      .string()\n      .required('O campo nacionalidade é obrigatório'),\n    estadoCivilPf: yup.string().required('O campo estado civil é obrigatório'),\n    rgPf: yup\n      .string()\n      .required('O campo RG é obrigatório')\n      .trim()\n      .min(5, 'Rg deve ter no minimo 5 caracteries'),\n    emissorPf: yup.string().required('O campo emissor é obrigatório').trim(),\n    emissaoPf: yup.string().required('O campo emissao é obrigatório'),\n    sexoPf: yup.string().required('O campo sexo é obrigatório'),\n    maePf: yup.string().required('Campo mãe é obrigatório').trim(),\n    paiPf: yup.string().required('Campo pai é obrigatório').trim(),\n    sitePf: yup\n      .string()\n      .required('Campo Site é obrigatório')\n      .url(\"Insira um site valido ex: 'https://www.google.com'\"),\n  });\n\n  useEffect(() => {\n    if (status === 'loading') {\n      setOpen(true);\n    } else if (status === 'completed') {\n      setOpen(false);\n      enqueueSnackbar(message, {\n        variant: 'success',\n      });\n      history.push('/dashboard');\n    } else if (status === 'failed') {\n      setOpen(false);\n      enqueueSnackbar(message, {\n        variant: 'error',\n      });\n    }\n    return () => {};\n  }, [status, message]);\n\n  useEffect(() => {\n    return () => {};\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      nome: '',\n      email: '',\n      senha: '',\n      senha2: '',\n      cpf: '',\n      celular: '',\n      nascimento: '',\n      naturalidade: '',\n      nacionalidade: '',\n      sexo: '',\n      estado_civil: '',\n      rg: '',\n      emissor: '',\n      emissao: '',\n      sexo: '',\n      mae: '',\n      pai: '',\n      cpfPf: '',\n      celularPf: '',\n      nascimentoPf: '',\n      naturalidadePf: '',\n      nacionalidadePf: '',\n      sexoPf: '',\n      estadoCivilPf: '',\n      rgPf: '',\n      emissorPf: '',\n      emissaoPf: '',\n      sexoPf: '',\n      maePf: '',\n      paiPf: '',\n      sitePf: '',\n      cepPf: '',\n      enderecoPf: '',\n      numeroPf: '',\n      bairroPf: '',\n      complementoPf: '',\n      cidadePf: '',\n      estadoPf: '',\n      cep: '',\n      endereco: '',\n      numero: '',\n      bairro: '',\n      complemento: '',\n      cidade: '',\n      estado: '',\n      cnpj: '',\n      telefone: '',\n      site: '',\n      razaosocial: '',\n      cnae: '',\n      nome_fantasia: '',\n      ceppj: '',\n      enderecopj: '',\n      numeropj: '',\n      bairropj: '',\n      cidadepj: '',\n      complementopj: '',\n      cidadepj: '',\n      estadopj: '',\n      bancopj: '',\n      agenciapj: '',\n      contapj: '',\n      operacaopj: '',\n      pixpj: '',\n    },\n    validationSchema,\n    onSubmit: (values) => {},\n  });\n\n  const handleBackdrop = (isOpen) => {\n    setOpen(isOpen);\n  };\n\n  const Step1NEXT = () => {\n    if (\n      !!formik.errors.nome ||\n      !!formik.errors.email ||\n      !!formik.errors.senha ||\n      !!formik.errors.senha2\n    ) {\n      enqueueSnackbar('Preencha todos os campos como nas instruções', {\n        variant: 'error',\n      });\n    } else {\n      if (\n        !!formik.values.nome &&\n        !!formik.values.email &&\n        !!formik.values.senha &&\n        !!formik.values.senha2\n      ) {\n        setValue(1);\n      } else {\n        enqueueSnackbar('Campos obrigatórios não preenchidos', {\n          variant: 'error',\n        });\n      }\n    }\n  };\n\n  const Step2PJ = () => {\n    setValue(2);\n    setIsCnpj(true);\n    setShowDot(true);\n    setDOT1(dotActive);\n  };\n\n  const Step2PF = () => {\n    setValue(6);\n    setIsCnpj(false);\n    setShowDot(true);\n    setDOT5(dotActive);\n  };\n\n  const Step3NEXT = () => {\n    if (validateCpf(formik.values.cpf)) {\n      if (\n        !!formik.values.celular &&\n        !!formik.values.nascimento &&\n        !!formik.values.naturalidade &&\n        !!formik.values.nacionalidade &&\n        !!formik.values.estado_civil &&\n        !!formik.values.rg &&\n        !!formik.values.emissor &&\n        !!formik.values.emissao &&\n        !!formik.values.sexo &&\n        !!formik.values.mae &&\n        !!formik.values.pai\n      ) {\n        setValue(3);\n        setDOT1(dotInactive);\n        setDOT2(dotActive);\n      } else {\n        enqueueSnackbar('Campos obrigatórios não preenchidos', {\n          variant: 'error',\n        });\n      }\n    } else {\n      enqueueSnackbar('Desculpe, informe um cpf válido!', {\n        variant: 'error',\n      });\n    }\n  };\n\n  const Step4NEXT = () => {\n    if (\n      !!formik.values.cep &&\n      !!formik.values.endereco &&\n      !!formik.values.numero &&\n      !!formik.values.bairro &&\n      !!formik.values.cidade &&\n      !!formik.values.estado\n    ) {\n      setValue(4);\n      setDOT2(dotInactive);\n      setDOT3(dotActive);\n    } else {\n      enqueueSnackbar('Campos obrigatórios não preenchidos', {\n        variant: 'error',\n      });\n    }\n  };\n\n  const Step5NEXT = () => {\n    if (\n      !!formik.values.cnpj &&\n      !!formik.values.telefone &&\n      !!formik.values.razaosocial &&\n      !!formik.values.cnae &&\n      !!formik.values.nome_fantasia &&\n      !!formik.values.ceppj &&\n      !!formik.values.enderecopj &&\n      !!formik.values.numeropj &&\n      !!formik.values.bairropj &&\n      !!formik.values.cidadepj &&\n      !!formik.values.estadopj &&\n      !!formik.values.site\n    ) {\n      setValue(5);\n      setDOT3(dotInactive);\n      setDOT4(dotActive);\n    } else {\n      enqueueSnackbar('Campos obrigatórios não preenchidos', {\n        variant: 'error',\n      });\n    }\n  };\n\n  const Step7NEXT = () => {\n    if (validateCpf(formik.values.cpfPf)) {\n      if (\n        !!formik.values.celularPf &&\n        !!formik.values.nascimentoPf &&\n        !!formik.values.naturalidadePf &&\n        !!formik.values.nacionalidadePf &&\n        !!formik.values.estadoCivilPf &&\n        !!formik.values.rgPf &&\n        !!formik.values.emissorPf &&\n        !!formik.values.emissaoPf &&\n        !!formik.values.sexoPf &&\n        !!formik.values.maePf &&\n        !!formik.values.paiPf &&\n        !!formik.values.sitePf\n      ) {\n        setValue(7);\n        setDOT5(dotInactive);\n        setDOT6(dotActive);\n      } else {\n        enqueueSnackbar('Campos obrigatórios não preenchidos', {\n          variant: 'error',\n        });\n      }\n    } else {\n      enqueueSnackbar('Desculpe, informe um cpf válido!', {\n        variant: 'error',\n      });\n    }\n  };\n\n  const Step8NEXT = () => {\n    if (\n      !!formik.values.cepPf &&\n      !!formik.values.enderecoPf &&\n      !!formik.values.numeroPf &&\n      !!formik.values.bairroPf &&\n      !!formik.values.cidadePf &&\n      !!formik.values.estadoPf\n    ) {\n      setValue(8);\n      setDOT6(dotInactive);\n      setDOT7(dotActive);\n    } else {\n      enqueueSnackbar('Campos obrigatórios não preenchidos', {\n        variant: 'error',\n      });\n    }\n  };\n\n  const Step2PREV = () => {\n    setValue(0);\n    setDOT2(dotInactive);\n    setDOT1(dotActive);\n  };\n\n  const Step3PREV = () => {\n    setValue(1);\n    setIsCnpj(false);\n    setShowDot(false);\n    setDOT1(dotInactive);\n    setDOT2(dotInactive);\n    setDOT3(dotInactive);\n    setDOT4(dotInactive);\n  };\n\n  const Step4PREV = () => {\n    setValue(2);\n    setDOT2(dotInactive);\n    setDOT1(dotActive);\n  };\n\n  const Step5PREV = () => {\n    setValue(3);\n    setDOT3(dotInactive);\n    setDOT2(dotActive);\n  };\n\n  const Step6PREV = () => {\n    setValue(4);\n    setDOT4(dotInactive);\n    setDOT3(dotActive);\n  };\n\n  const Step7PREV = () => {\n    setValue(1);\n    setShowDot(false);\n    setDOT5(dotInactive);\n    setDOT6(dotInactive);\n    setDOT7(dotInactive);\n  };\n\n  const Step8PREV = () => {\n    setValue(6);\n    setDOT6(dotInactive);\n    setDOT5(dotActive);\n  };\n\n  const Step9PREV = () => {\n    setValue(7);\n    setDOT7(dotInactive);\n    setDOT6(dotActive);\n  };\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <Container maxWidth='xl' className={classes.container}>\n      <Backdrop className={classes.backdrop} open={open}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n      <Grid container direction='column' justify='center'>\n        <Grid item style={{ height: '80px' }}>\n          <Grid container justify='flex-start'>\n            <Grid item>\n              <img src={logo} className={classes.logo} alt='logotipo'></img>\n            </Grid>\n          </Grid>\n        </Grid>\n        <form\n          onSubmit={(e) => {\n            console.log(formik);\n            const { values } = formik;\n            if (\n              !!formik.values.bancopj &&\n              !!formik.values.agenciapj &&\n              !!formik.values.contapj\n            ) {\n              let body = undefined;\n              if (isCnpj) {\n                body = {\n                  usuario: {\n                    nome: values.nome,\n                    email: values.email,\n                    senha: sha256(values.senha).toString().trim(),\n                  },\n                  pessoa: {\n                    cpf: maskNumber(values.cpf),\n                    celular: maskNumber(values.celular),\n                    nascimento: values.nascimento,\n                    naturalidade: values.naturalidade,\n                    nacionalidade: values.nacionalidade,\n                    estado_civil: values.estado_civil,\n                    rg: values.rg,\n                    emissor: values.emissor,\n                    emissao: values.emissao,\n                    sexo: values.sexo,\n                    mae: values.mae,\n                    pai: values.pai,\n                  },\n                  empresa: {\n                    cnpj: maskNumber(values.cnpj),\n                    cnae: values.cnae,\n                    razao_social: values.razaosocial,\n                    telefone_fixo: maskNumber(values.telefone),\n                    celular: maskNumber(values.celular),\n                    nome_fantasia: values.nome_fantasia,\n                    site: values.site,\n                  },\n                  conta: {\n                    banco: values.bancopj.toString(),\n                    agencia: maskNumber(values.agenciapj),\n                    conta: maskNumber(values.contapj),\n                    operacao: maskNumber(values.operacaopj),\n                    pix: values.pixpj,\n                  },\n                  endereco_cnpj: {\n                    cep: maskNumber(values.cep),\n                    complemento: values.complementopj,\n                    endereco: values.enderecopj,\n                    numero: maskNumber(values.numeropj),\n                    bairro: values.bairropj,\n                    cidade: values.cidadepj,\n                    estado: values.estadopj,\n                  },\n                  endereco_cpf: {\n                    cep: maskNumber(values.cep),\n                    complemento: values.complemento,\n                    endereco: values.endereco,\n                    numero: values.numeropj,\n                    bairro: values.bairro,\n                    cidade: values.cidade,\n                    estado: values.estado,\n                  },\n                };\n\n                dispatch(createCnpj(body));\n              } else {\n                body = {\n                  usuario: {\n                    nome: values.nome,\n                    email: values.email,\n                    senha: sha256(values.senha).toString().trim(),\n                  },\n                  pessoa: {\n                    cpf: maskNumber(values.cpfPf),\n                    celular: maskNumber(values.celularPf),\n                    nascimento: values.nascimentoPf,\n                    naturalidade: values.naturalidadePf,\n                    nacionalidade: values.nacionalidadePf,\n                    estado_civil: values.estadoCivilPf,\n                    rg: values.rgPf,\n                    emissor: values.emissorPf,\n                    emissao: values.emissaoPf,\n                    sexo: values.sexoPf,\n                    mae: values.maePf,\n                    pai: values.paiPf,\n                  },\n                  conta: {\n                    banco: values.bancopj.toString(),\n                    agencia: maskNumber(values.agenciapj),\n                    conta: maskNumber(values.contapj),\n                    operacao: maskNumber(values.operacaopj),\n                    pix: values.pixpj,\n                  },\n                  endereco_cpf: {\n                    cep: maskNumber(values.cepPf),\n                    complemento: values.complementoPf,\n                    endereco: values.enderecoPf,\n                    numero: values.numeroPf,\n                    bairro: values.bairroPf,\n                    cidade: values.cidadePf,\n                    estado: values.estadoPf,\n                  },\n                };\n                dispatch(createPf(body));\n              }\n            } else {\n              enqueueSnackbar('Campos obrigatórios não preenchidos', {\n                variant: 'error',\n              });\n            }\n            formik.handleSubmit(e);\n          }}\n        >\n          <Grid item xs={12} md={12} style={{ height: '30px' }}>\n            <Box\n              display='flex'\n              justifyContent='flex-end'\n              // m={1}\n              p={1}\n              // bgcolor=\"background.paper\"\n            >\n              <CustomTabs\n                value={value}\n                onChange={handleChange}\n                indicatorColor='primary'\n                aria-label='Tabs Dot'\n              >\n                {isCnpj && showDot && (\n                  <div>\n                    <Tab\n                      label=''\n                      {...a11yProps(0)}\n                      style={{ minWidth: '2px' }}\n                      disabled\n                    />\n                    <Tab\n                      label=''\n                      {...a11yProps(1)}\n                      style={{ minWidth: '2px' }}\n                      disabled\n                    />\n                    <Tab\n                      label={<a href='#' className={dot1} />}\n                      {...a11yProps(2)}\n                      style={{ minWidth: '2px' }}\n                      disabled\n                    />\n                    <Tab\n                      label={<a href='#' className={dot2} />}\n                      {...a11yProps(3)}\n                      style={{ minWidth: '2px' }}\n                      disabled\n                    />\n                    <Tab\n                      label={<a href='#' className={dot3} />}\n                      {...a11yProps(4)}\n                      style={{ minWidth: '2px' }}\n                      disabled\n                    />\n                    <Tab\n                      label={<a href='#' className={dot4} />}\n                      {...a11yProps(5)}\n                      style={{ minWidth: '2px' }}\n                      disabled\n                    />{' '}\n                  </div>\n                )}\n                {!isCnpj && showDot && (\n                  <div>\n                    <Tab\n                      label={<a href='#' className={dot5} />}\n                      {...a11yProps(6)}\n                      style={{ minWidth: '2px' }}\n                      disabled\n                    />\n                    <Tab\n                      label={<a href='#' className={dot6} />}\n                      {...a11yProps(7)}\n                      style={{ minWidth: '2px' }}\n                      disabled\n                    />\n\n                    <Tab\n                      label={<a href='#' className={dot7} />}\n                      {...a11yProps(8)}\n                      style={{ minWidth: '2px' }}\n                      disabled\n                    />\n                  </div>\n                )}\n              </CustomTabs>\n            </Box>\n          </Grid>\n          <Grid item>\n            <Grid container alignItems='center' justify='center'>\n              <Grid item xs={12} md={12} lg={12}>\n                <div\n                  style={{\n                    transform: 'scale(0.80)',\n                    position: 'sticky',\n                    height: 300,\n                  }}\n                >\n                  <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={value}\n                    onChangeIndex={handleChangeIndex}\n                  >\n                    <TabPanel value={value} index={0}>\n                      <Card elevation={elevation}>\n                        <CardContent>\n                          <SlideOne nextStep={Step1NEXT} formik={formik} />\n                        </CardContent>\n                      </Card>\n                    </TabPanel>\n                    <TabPanel value={value} index={1}>\n                      <Card elevation={elevation}>\n                        <CardContent>\n                          <SlideTwo\n                            nextStep={Step2PJ}\n                            StepPF={Step2PF}\n                            previousStep={Step2PREV}\n                          />\n                        </CardContent>\n                      </Card>\n                    </TabPanel>\n                    <TabPanel value={value} index={2}>\n                      <Card elevation={elevation}>\n                        <CardContent>\n                          <SlideThree\n                            nextStep={Step3NEXT}\n                            previousStep={Step3PREV}\n                            formik={formik}\n                          />\n                        </CardContent>\n                      </Card>\n                    </TabPanel>\n                    <TabPanel value={value} index={3}>\n                      <Card elevation={elevation}>\n                        <CardContent>\n                          <SlideFour\n                            nextStep={Step4NEXT}\n                            previousStep={Step4PREV}\n                            formik={formik}\n                            waitCep={handleBackdrop}\n                          />\n                        </CardContent>\n                      </Card>\n                    </TabPanel>\n                    <TabPanel value={value} index={4}>\n                      <Card elevation={elevation}>\n                        <CardContent>\n                          <SlideFive\n                            nextStep={Step5NEXT}\n                            previousStep={Step5PREV}\n                            formik={formik}\n                            waitCnpj={handleBackdrop}\n                          />\n                        </CardContent>\n                      </Card>\n                    </TabPanel>\n                    <TabPanel value={value} index={5}>\n                      <Card elevation={elevation}>\n                        <CardContent>\n                          <SlideSix previousStep={Step6PREV} formik={formik} />\n                        </CardContent>\n                      </Card>\n                    </TabPanel>\n                    <TabPanel value={value} index={6}>\n                      <Card elevation={elevation}>\n                        <CardContent>\n                          <SlideSeven\n                            nextStep={Step7NEXT}\n                            previousStep={Step7PREV}\n                            formik={formik}\n                          />\n                        </CardContent>\n                      </Card>\n                    </TabPanel>\n                    <TabPanel value={value} index={7}>\n                      <Card elevation={elevation}>\n                        <CardContent>\n                          <SlideEight\n                            nextStep={Step8NEXT}\n                            previousStep={Step8PREV}\n                            formik={formik}\n                            waitCep={handleBackdrop}\n                          />\n                        </CardContent>\n                      </Card>\n                    </TabPanel>\n                    <TabPanel value={value} index={8}>\n                      <Card elevation={elevation}>\n                        <CardContent>\n                          <SlideSix previousStep={Step9PREV} formik={formik} />\n                        </CardContent>\n                      </Card>\n                    </TabPanel>\n                  </SwipeableViews>\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n","import Home from \"../pages/Home\";\nimport Signin from \"pages/Signin\";\nimport Email from \"pages/Email\";\nimport Signup from \"pages/Signup\";\nimport RecoveryPassword from \"pages/RecoveryPassword\";\n// import RegisterList from \"../pages/Customer/ApproveRegister/ListView\";\n// import UserList from \"../pages/UserSystem/User/ListView\";\n// import User from \"../pages/UserSystem/User/FormView\";\n// import GroupList from \"../pages/UserSystem/Group/ListView\";\n// import EditUser from \"../pages/UserSystem/User/EditView\";\n\nexport const routes = [\n  { path: \"/email/:token\", title: \"Email\", component: Email, private: false },\n  { path: \"/signin\", title: \"Signin\", component: Signin, private: false },\n  { path: \"/signup\", title: \"Signup\", component: Signup, private: false },\n  { path: \"/dashboard\", title: \"Home\", component: Home, private: true },\n  {\n    path: \"/recoverypassword/:base64\",\n    title: \"Recovery Password\",\n    component: RecoveryPassword,\n    private: false,\n  },\n  // { path: \"/userList\", title: \"Usuário\", component: UserList },\n  // {\n  //   path: \"/userConfig\",\n  //   title: \"Configuração de Usuário\",\n  //   component: User,\n  // },\n  // { path: \"/groupList\", title: \"Grupo\", component: GroupList },\n  // { path: \"/registerList\", title: \"Grupo\", component: RegisterList },\n  // { path: \"/editUser/:id\", title: \"EditUser\", component: EditUser },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStyles } from \"./styles\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  Backdrop,\n  CircularProgress,\n  IconButton,\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Paper,\n  InputBase,\n  Grid,\n} from \"@material-ui/core\";\nimport { PhoneIphone, Edit } from \"@material-ui/icons\";\nimport ButtonTimer from \"../../components/ButtonTimer\";\nimport { validationStatus } from \"../../store/ducks/Validation\";\nimport { editCellphone, confirmTokenSMS } from \"../../store/ducks/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Dashboard() {\n  const { enqueueSnackbar } = useSnackbar();\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    validation: { message, celular },\n    signer: { token: tokenSigner },\n    signup: { token: tokenSignup },\n    message: { status: statusMessage, message: messageCellphone, type },\n  } = useSelector((state) => state);\n\n  const [openModal, setOpenModal] = useState(false);\n  const [openBackDrop, setOpenBackDrop] = useState(false);\n\n  useEffect(() => {\n    if (!!tokenSigner) {\n      validateSMSandEmail(tokenSigner);\n    } else if (!!tokenSignup) {\n      validateSMSandEmail(tokenSignup);\n    }\n  }, [tokenSigner, message, celular]);\n\n  useEffect(() => {\n    if (statusMessage === \"loading\" && type === \"confirmTokenSMS\") {\n      setOpenBackDrop(true);\n    } else if (statusMessage === \"completed\" && type === \"confirmTokenSMS\") {\n      setOpenBackDrop(false);\n      setOpenModal(false);\n      enqueueSnackbar(messageCellphone, {\n        variant: \"success\",\n      });\n    } else if (statusMessage === \"failed\" && type === \"confirmTokenSMS\") {\n      setOpenBackDrop(false);\n      let message = \"Por favor, insira um token de SMS\";\n      if (!!messageCellphone) {\n        message = messageCellphone;\n      }\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    }\n  }, [statusMessage]);\n\n  useEffect(() => {\n    if (statusMessage === \"loading\" && type === \"editCellphone\") {\n      setOpenBackDrop(true);\n    } else if (statusMessage === \"completed\" && type === \"editCellphone\") {\n      setOpenBackDrop(false);\n      enqueueSnackbar(messageCellphone, {\n        variant: \"success\",\n      });\n    } else if (statusMessage === \"failed\" && type === \"editCellphone\") {\n      setOpenBackDrop(false);\n      enqueueSnackbar(messageCellphone, {\n        variant: \"error\",\n      });\n    }\n  }, [statusMessage]);\n\n  const [token, setTOKEN] = useState(\"\");\n  const OnchangeTOKEN = (v) => {\n    setTOKEN(v.replace(/\\D/g, \"\"));\n  };\n  const [cellphone, setCELLPHONE] = useState(\"\");\n  const OnchangeCELLPHONE = (v) => {\n    setCELLPHONE(v);\n  };\n\n  const handleSendTokenSMS = () => {\n    let tokens = { tokenSMS: token };\n    if (!!tokenSigner) {\n      tokens = { ...tokens, token: tokenSigner };\n      dispatch(confirmTokenSMS(tokens));\n    } else if (!!tokenSignup) {\n      tokens = { ...tokens, token: tokenSignup };\n      dispatch(confirmTokenSMS(tokens));\n    }\n  };\n\n  const changeCell = async () => {\n    let body = { celular: cellphone };\n    if (!!tokenSigner) {\n      body = { ...body, token: tokenSigner };\n      dispatch(editCellphone(body));\n    } else if (!!tokenSignup) {\n      body = { ...body, token: tokenSignup };\n      dispatch(editCellphone(body));\n    }\n  };\n\n  const validateSMSandEmail = (token) => {\n    dispatch(validationStatus(token));\n    setCELLPHONE(`(**) ****-${celular.toString().substring(7, 15)}`);\n    message === \"SMS validado\" || message === \"SMS e Email validado\"\n      ? setOpenModal(false)\n      : setOpenModal(true);\n  };\n\n  return (\n    <>\n      <Backdrop className={classes.backdrop} open={openBackDrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Dialog\n        open={openModal}\n        aria-labelledby=\"form-dialog-title\"\n        data-keyboard=\"false\"\n        data-backdrop=\"static\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Informe o Token enviado por SMS\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Informe o token enviado para seu celular para que confirme sua conta\n            no gateway de pagamentos Vileve.\n          </DialogContentText>\n          <Grid container>\n            <Grid item>\n              <TextField\n                style={{ float: \"left\", width: 90 }}\n                autoFocus\n                // margin=\"dense\"\n                id=\"name\"\n                label=\"Token\"\n                type=\"text\"\n                autoComplete=\"off\"\n                variant=\"outlined\"\n                inputProps={{\n                  maxLength: 6,\n                  onChange: (e) => OnchangeTOKEN(e.target.value),\n                  value: token,\n                }}\n                // fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <Paper\n                component=\"form\"\n                className={classes.inputcell}\n                elevation={5}\n              >\n                <IconButton className={classes.iconButton} aria-label=\"menu\">\n                  <PhoneIphone />\n                </IconButton>\n                <InputBase\n                  placeholder=\"********\"\n                  inputProps={{\n                    maxLength: 11,\n                    onChange: (e) => OnchangeCELLPHONE(e.target.value),\n                    value: cellphone,\n                  }}\n                />\n                <IconButton\n                  type=\"button\"\n                  onClick={changeCell}\n                  className={classes.iconButton}\n                  aria-label=\"celular\"\n                >\n                  <Edit />\n                </IconButton>\n              </Paper>\n            </Grid>\n            <Grid item>\n              <ButtonTimer style={{ float: \"left\" }} />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSendTokenSMS}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Enviar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    backgroundColor: \"#FFAAAA\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  toolBarBackGround: {\n    backgroundColor: \"#FFA\",\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  logo: {\n    width: \"46%\",\n    minHeight: \"64px\",\n    paddingTop: \"6px\",\n    paddingBottom: \"5px\",\n  },\n  header: {\n    // width: drawerWidth,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  grow: {\n    flexGrow: 1,\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Menu, MenuItem, IconButton, Badge } from \"@material-ui/core\";\nimport {\n  AccountCircle,\n  ExitToApp,\n  Mail,\n  Notifications,\n} from \"@material-ui/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { logOut } from \"../../store/ducks/Signer\";\n\nexport const AppBarActions = ({\n  menuId,\n  mobileMenuId,\n  mobileMoreAnchorEl,\n  handleMobileMoreAnchorEl,\n  anchorEl,\n  handleAnchorEl,\n  isMenuOpen,\n  isMobileMenuOpen,\n}) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  // const [anchorEl, setAnchorEl] = useState(null);\n  //   const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n\n  // const isMenuOpen = Boolean(anchorEl);\n  // const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleMobileMenuClose = () => {\n    handleMobileMoreAnchorEl(null);\n    // setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    handleAnchorEl(null);\n    // setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleLogout = () => {\n    dispatch(logOut());\n    history.push(\"/signin\");\n    // handleAnchorEl(null);\n    // // setAnchorEl(null);\n    // handleMobileMenuClose();\n  };\n\n  const handleProfileMenuOpen = (event) => {\n    handleAnchorEl(event.currentTarget);\n  };\n\n  //   const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleLogout}>\n        <IconButton\n          aria-label=\"logout\"\n          aria-controls=\"primary-logout\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <ExitToApp />\n        </IconButton>\n        <p>Sair</p>\n      </MenuItem>\n      {/* <MenuItem onClick={handleMenuClose}>Configurações</MenuItem> */}\n      {/* <MenuItem onClick={handleLogout}>My account</MenuItem> */}\n    </Menu>\n  );\n\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <Mail />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <Notifications />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n  return (\n    <div>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n};\n\nexport default AppBarActions;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(6),\n  },\n  // necessary for content to be below app bar\n  // toolbar: theme.mixins.toolbar,\n  tollbar: {\n    backgroundColor: 'blue',\n    width: drawerWidth,\n    height: '500px',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n","import { Person, Group, LibraryAddCheck } from '@material-ui/icons';\n\nexport const sections = [\n  {\n    subheader: 'Cliente',\n    section: 'customer',\n    open: false,\n    items: [\n      {\n        title: 'Aprovar Cadastro',\n        icon: LibraryAddCheck,\n        href: '/dashboard',\n      },\n    ],\n  },\n  {\n    subheader: 'Configurações',\n    section: 'settings',\n    open: false,\n    items: [\n      {\n        title: 'Settings',\n        icon: LibraryAddCheck,\n        href: '/',\n      },\n    ],\n  },\n];\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  List,\n  Divider,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { ExpandLess, ExpandMore, Dashboard } from \"@material-ui/icons\";\nimport { useStyles } from \"./styles\";\nimport { sections } from \"../../../../../menus\";\nimport { Link } from \"react-router-dom\";\n\nexport const NavItens = () => {\n  const classes = useStyles();\n  const [openSection, setOpenSection] = useState(sections);\n\n  const handleClick = (section) => {\n    const currentSection = sections.findIndex((obj) => {\n      return obj.section === section;\n    });\n    const newArray = [...sections];\n    newArray[currentSection].open = !sections[currentSection].open;\n    setOpenSection(newArray);\n  };\n\n  const Sections = sections.map((section) => {\n    return (\n      <List\n        key={section.subheader}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        // subheader={\n        //   <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n        //     Nested List Items\n        //   </ListSubheader>\n        // }\n        className={classes.root}\n      >\n        <ListItem\n          to=\"/\"\n          button\n          onClick={() => {\n            handleClick(section.section);\n          }}\n        >\n          <ListItemText\n            primary={\n              <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                {section.subheader}\n              </Typography>\n            }\n          />\n          {section.open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={section.open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {section.items.map((item) => {\n              const Icon = item.icon;\n              return (\n                <ListItem\n                  key={item.title}\n                  button\n                  component={Link}\n                  to={item.href}\n                  className={classes.nested}\n                >\n                  <ListItemIcon>\n                    <Icon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Typography\n                        variant=\"caption\"\n                        display=\"block\"\n                        gutterBottom\n                      >\n                        {item.title}{\" \"}\n                      </Typography>\n                    }\n                  />\n                </ListItem>\n              );\n            })}\n          </List>\n        </Collapse>\n        <Divider />\n      </List>\n    );\n  });\n\n  return (\n    <div>\n      <Divider />\n      <List>\n        <ListItem button component={Link} to=\"/dashboard\">\n          <ListItemIcon>\n            <Dashboard />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </List>\n      {Sections}\n    </div>\n  );\n};\n\nexport default NavItens;\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Badge,\n  Hidden,\n  Drawer,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  Menu,\n  AccountCircle,\n  Mail,\n  Notifications,\n  MoreVert,\n} from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport { routes } from \"../../../../routes\";\nimport logo from \"../../../../assets/images/logo_vileve_way.png\";\nimport AppBarAction from \"../../../AppBarActions\";\nimport NavItens from \"./NavItem\";\n\nfunction NavBar(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  const handleMobileMenuClose = (value) => {\n    setMobileMoreAnchorEl(value);\n  };\n\n  const handleAnchorEl = (value) => {\n    setAnchorEl(value);\n  };\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  const menuId = \"primary-search-account-menu\";\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n\n  return (\n    <>\n      <AppBar position=\"absolute\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            VileveWay Lojista\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <Mail />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <Notifications />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreVert />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <AppBarAction\n        menuId={menuId}\n        mobileMenuId={mobileMenuId}\n        handleMobileMoreAnchorEl={handleMobileMenuClose}\n        mobileMoreAnchorEl={mobileMoreAnchorEl}\n        anchorEl={anchorEl}\n        isMenuOpen={isMenuOpen}\n        handleAnchorEl={handleAnchorEl}\n        isMobileMenuOpen={isMobileMenuOpen}\n      />\n      {/* <BrowserRouter> */}\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            <NavItens />\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            <div\n              className={\n                // eslint-disable-next-line no-sequences\n                (classes.toolbar, classes.header)\n              }\n            >\n              <img src={logo} alt=\"Logo vileveWay\" className={classes.logo} />\n            </div>\n            <NavItens />\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          {routes.map((route) => {\n            if (route.private) {\n              return (\n                <Route\n                  exact\n                  path={route.path}\n                  component={route.component}\n                  key={route.path}\n                />\n              );\n            }\n            return;\n          })}\n        </Switch>\n      </main>\n      {/* </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default NavBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n}));\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport NavBar from \"./AppLayout/NavBar\";\nimport { useStyles } from \"./styles\";\n\nfunction Layout() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <NavBar />\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, { useEffect } from 'react';\nimport { ThemeProvider } from '@material-ui/core';\nimport lightTheme from './styles/themes/light';\nimport { SnackbarProvider } from 'notistack';\nimport { api } from './services/api';\nimport { useSelector } from 'react-redux';\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router,\n  Redirect,\n} from 'react-router-dom';\nimport { routes } from './routes';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport Layout from './components/Layout';\nconst App = () => {\n  const { signed, token } = useSelector((state) => {\n    return state.signer;\n  });\n\n  useEffect(() => {\n    if (!!token) {\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n    }\n  }, []);\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptBR}>\n        <SnackbarProvider\n          maxSnack={3}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n        >\n          <Router>\n            <Switch>\n              {routes.map(({ path, component, private: privateRoute }) => {\n                if (!privateRoute) {\n                  return (\n                    <Route exact key={path} path={path} component={component} />\n                  );\n                }\n                return;\n              })}\n              {signed ? <Layout /> : <Redirect to='/signin' />}\n            </Switch>\n          </Router>\n        </SnackbarProvider>\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nimport signerReducer from \"./ducks/Signer\";\nimport emailReducer from \"./ducks/Email\";\nimport signupReducer from \"./ducks/Signup\";\nimport validationReducer from \"./ducks/Validation\";\nimport messageReducer from \"./ducks/Message\";\n\nconst reducers = combineReducers({\n  signer: signerReducer,\n  validation: validationReducer,\n  email: emailReducer,\n  signup: signupReducer,\n  message: messageReducer,\n});\n\nexport default reducers;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport Validation from \"./ducks/Validation\";\nimport reducers from \"./reducers\";\n\nconst persistConfig = {\n  key: \"vileveWay-Client\",\n  version: 1,\n  storage,\n  blacklist: [\"signup\", \"message\", \"validation\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\nimport store from \"./store\";\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { api, apiRecovery } from \"../../../services/api\";\n\nconst signinPost = async (body) => {\n  const res = await api.post(`/signin`, body);\n  api.defaults.headers.Authorization = `Bearer ${res.data.token}`;\n  return res;\n};\n\nconst recoverPassword = async (body) => {\n  const res = await apiRecovery.put(\"/password\", body);\n  return res;\n};\n\nconst sendEmailRecover = async (body) => {\n  const res = await apiRecovery.post(\"/recovery\", body);\n  return res;\n};\n\nexport { signinPost, recoverPassword, sendEmailRecover};\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { signinPost, sendEmailRecover, recoverPassword } from \"./service\";\n\nexport const signin = createAsyncThunk(\n  \"signer/signin\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const { data } = await signinPost(body);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const recoveryPassword = createAsyncThunk(\n  \"signer/recoveryPassword\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const { data }  = await recoverPassword(body);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const sendEmailRecovery = createAsyncThunk(\n  \"signer/sendEmailRecovery\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const { data }  = await sendEmailRecover(body);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  token: \"\",\n  signed: false,\n  status: \"idle\",\n  message: null,\n  statusMessage: null,\n  type: null, \n};\nconst signer = createSlice({\n  name: \"signer\",\n  initialState,\n  reducers: {\n    logOut(state) {\n      return (state = {});\n    },\n    clearMessage(state) {\n      return (state = { ...state, message: null });\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(signin.pending, (state) => {\n        return (state = { ...state, status: \"loading\" });\n        // state.status = \"loading\";\n      })\n      .addCase(signin.fulfilled, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"completed\",\n          token: action.payload.token,\n          signed: true,\n          statusMessage: action.payload.name,\n          message: action.payload.message\n        });\n      })\n      .addCase(signin.rejected, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"failed\",\n          message: action.payload.message,\n          statusMessage: action.payload.name,\n        });\n      })           \n      .addCase(recoveryPassword.pending, (state) => {\n        return (state = { ...state, status: \"loading\" });\n      })\n      .addCase(recoveryPassword.fulfilled, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"completed\",\n          message: action.payload.message,\n          statusMessage: action.payload.name,\n          type: \"recoveryPassword\"\n        });\n      })\n      .addCase(recoveryPassword.rejected, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"failed\",\n          message: action.payload.message,\n          statusMessage: action.payload.name,\n        });\n      })\n      .addCase(sendEmailRecovery.pending, (state) => {\n        return (state = { ...state, status: \"loading\" });\n      })\n      .addCase(sendEmailRecovery.fulfilled, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"completed\",\n          message: action.payload.message,\n          statusMessage: action.payload.name,\n        });\n      })\n      .addCase(sendEmailRecovery.rejected, (state, action) => {\n        return (state = {\n          ...state,\n          status: \"failed\",\n          message: action.payload.message,\n          statusMessage: action.payload.name,\n        });\n      });\n  },\n});\n\nexport const { logOut, clearMessage } = signer.actions;\n// export const { increment, decrement } = systemUser.actions;\n\nexport default signer.reducer;\n"],"sourceRoot":""}